<ctl:package xmlns:ctl="http://www.occamlab.com/ctl" xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:om="http://www.opengis.net/om/2.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:owsTests="http://www.opengis.net/ows/1.1" xmlns:parsers="http://www.occamlab.com/te/parsers" xmlns:sml="http://www.opengis.net/sensorML/1.0.1" xmlns:soap11="http://schemas.xmlsoap.org/soap/" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope" xmlns:sos="http://www.opengis.net/sos/2.0" xmlns:sosFunctions="http://www.opengis.net/sos/2.0" xmlns:swe="http://www.opengis.net/swe/2.0" xmlns:swes="http://www.opengis.net/swes/2.0" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<!-- 10.SOS Transactional: InsertObservation -->
   <ctl:test name="sos:InsertObservation-Test" isConformanceClass="true">
      <ctl:param name="GetCapabilitiesURL" />
      <ctl:param name="isGetCapabilitiesGET" />
      <ctl:param name="capabilitiesResponseSchemaType" />
      <ctl:param name="capabilitiesResponseSchemaLocation" />
      <ctl:param name="GetObservationURL" />
      <ctl:param name="isGetObservationGET" />
      <ctl:param name="observationResponseSchemaType" />
      <ctl:param name="observationResponseSchemaLocation" />
      <ctl:param name="serviceURL" />
      <ctl:param name="hasIO" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="serviceType" />
      <ctl:param name="serviceVersion" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="InsertObservationResponseContentType" />
      <ctl:param name="exceptionReportSchemaLocation" />
      <ctl:param name="exceptionReportSchemaType" />
      <ctl:param name="test1001" />
      <ctl:param name="test1002" />
      <ctl:param name="test1003" />
      <ctl:param name="test1004" />
      <ctl:param name="test1005" />
      <ctl:param name="test1006" />
      <ctl:param name="test1007" />
      <ctl:param name="test1008" />
      <ctl:param name="test1009" />
      <ctl:param name="test1010" />
      <ctl:param name="test1011" />
      <ctl:param name="test1012" />
      <ctl:param name="test1013" />
      <ctl:param name="test1014" />
      <ctl:param name="test1015" />
      <ctl:param name="test1016" />
      <ctl:param name="test1017" />
      <ctl:param name="test1018" />
      <ctl:param name="test1019" />
      <ctl:assertion>Execute InsertObservation Test.</ctl:assertion>
      <ctl:comment>Pass if all the subtest not fail; fail otherwise.</ctl:comment>
      <ctl:code>
         <xsl:choose>
            <xsl:when test="$hasIO eq 'false'">
               <ctl:message>The server does not support the operation "InsertObservation", so skip this test.</ctl:message>
            </xsl:when>
            <xsl:otherwise>
               <!-- get a valid offering-->
               <xsl:variable name="offering" select="$getCapabilitiesResponse//sos:contents//swes:offering[1]//swes:identifier" />
               <ctl:message>
                  The offering is :"
                  <xsl:value-of select="$offering" />
                  ".
               </ctl:message>
               <!-- Get a valid observationType -->
               <xsl:variable name="observationType" select="$getCapabilitiesResponse//sos:contents//swes:offering[1]//sos:observationType" />
               <ctl:message>
                  The observationType is :"
                  <xsl:value-of select="$observationType" />
                  ".
               </ctl:message>
               <!-- get a valid procedure-->
               <xsl:variable name="procedure" select="$getCapabilitiesResponse//sos:contents//swes:offering[1]//swes:procedure[1]" />
               <ctl:message>
                  The procedure is :"
                  <xsl:value-of select="$procedure" />
                  ".
               </ctl:message>
               <!-- get a valid observableProperty-->
               <xsl:variable name="observableProperty" select="$getCapabilitiesResponse//sos:contents//swes:offering[1]//swes:observableProperty[1]" />
               <ctl:message>
                  The observableProperty is :"
                  <xsl:value-of select="$observableProperty" />
                  ".
               </ctl:message>
               <!-- get a valid featureOfInterest From GetObservation-->
               <xsl:variable name="getObservationResponse">
                  <xsl:choose>
                     <xsl:when test="$isSOAP eq 'true'">
                        <ctl:soap-request version="1.2" charset="UTF-8">
                           <ctl:url>
                              <xsl:value-of select="$GetObservationURL" />
                           </ctl:url>
                           <ctl:body>
                              <sos:GetObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd              http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                                 <sos:procedure>
                                    <xsl:value-of select="$procedure" />
                                 </sos:procedure>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observedProperty>
                                    <xsl:value-of select="$observableProperty" />
                                 </sos:observedProperty>
                              </sos:GetObservation>
                           </ctl:body>
                           <parsers:SOAPParser return="content">
                              <parsers:XMLValidatingParser>
                                 <parsers:schemas>
                                    <parsers:schema type="url">http://schemas.opengis.net/samplingSpatial/2.0/spatialSamplingFeature.xsd</parsers:schema>
                                    <parsers:schema>
                                       <xsl:attribute name="type">
                                          <xsl:value-of select="$observationResponseSchemaType" />
                                       </xsl:attribute>
                                       <xsl:value-of select="$observationResponseSchemaLocation" />
                                    </parsers:schema>
                                 </parsers:schemas>
                              </parsers:XMLValidatingParser>
                           </parsers:SOAPParser>
                        </ctl:soap-request>
                     </xsl:when>
                     <xsl:when test="($isGetObservationGET)">
                        <ctl:request>
                           <ctl:url>
                              <xsl:value-of select="$GetObservationURL" />
                           </ctl:url>
                           <ctl:method>get</ctl:method>
                           <ctl:param name="service">SOS</ctl:param>
                           <ctl:param name="version">2.0.0</ctl:param>
                           <ctl:param name="request">GetObservation</ctl:param>
                           <ctl:param name="procedure">
                              <xsl:value-of select="$procedure" />
                           </ctl:param>
                           <ctl:param name="offering">
                              <xsl:value-of select="$offering" />
                           </ctl:param>
                           <ctl:param name="observedProperty">
                              <xsl:value-of select="$observableProperty" />
                           </ctl:param>
                           <parsers:XMLValidatingParser>
                              <parsers:schemas>
                                 <parsers:schema type="resource">xsd/w3c/xml.xsd</parsers:schema>
                                 <parsers:schema type="url">http://schemas.opengis.net/samplingSpatial/2.0/spatialSamplingFeature.xsd</parsers:schema>
                                 <parsers:schema>
                                    <xsl:attribute name="type">
                                       <xsl:value-of select="$observationResponseSchemaType" />
                                    </xsl:attribute>
                                    <xsl:value-of select="$observationResponseSchemaLocation" />
                                 </parsers:schema>
                              </parsers:schemas>
                           </parsers:XMLValidatingParser>
                        </ctl:request>
                     </xsl:when>
                     <xsl:otherwise>
                        <ctl:request>
                           <ctl:url>
                              <xsl:value-of select="$GetObservationURL" />
                           </ctl:url>
                           <ctl:method>post</ctl:method>
                           <ctl:body>
                              <sos:GetObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd              http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                                 <sos:procedure>
                                    <xsl:value-of select="$procedure" />
                                 </sos:procedure>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observedProperty>
                                    <xsl:value-of select="$observableProperty" />
                                 </sos:observedProperty>
                              </sos:GetObservation>
                           </ctl:body>
                           <parsers:XMLValidatingParser>
                              <parsers:schemas>
                                 <parsers:schema type="resource">xsd/w3c/xml.xsd</parsers:schema>
                                 <parsers:schema type="url">http://schemas.opengis.net/samplingSpatial/2.0/spatialSamplingFeature.xsd</parsers:schema>
                                 <parsers:schema>
                                    <xsl:attribute name="type">
                                       <xsl:value-of select="$observationResponseSchemaType" />
                                    </xsl:attribute>
                                    <xsl:value-of select="$observationResponseSchemaLocation" />
                                 </parsers:schema>
                              </parsers:schemas>
                           </parsers:XMLValidatingParser>
                        </ctl:request>
                     </xsl:otherwise>
                  </xsl:choose>
               </xsl:variable>
               <xsl:variable name="featureOfInterest" select="$getObservationResponse//sos:GetObservationResponse/sos:observationData/*[1]/om:featureOfInterest/@xlink:href" />
               <ctl:message>
                  The featureOfInterest is :"
                  <xsl:value-of select="$featureOfInterest" />
                  ".
               </ctl:message>
               <!-- get a valid observation -->
               <xsl:variable name="observation">
                  <xsl:copy-of select="$getObservationResponse//sos:GetObservationResponse/sos:observationData/*[1]" />
               </xsl:variable>
               <ctl:message>
                  The observation is :"
                  <xsl:value-of select="$observation" />
                  ".
               </ctl:message>
               <xsl:if test="$test1001 eq 'true'">
                  <ctl:message select="'******************** 10.01.RequestNoService ********************'" />
                  <ctl:call-test name="sos:IORequestNoService_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1002 eq 'true'">
                  <ctl:message select="'******************** 10.02.RequestNullService ********************'" />
                  <ctl:call-test name="sos:IORequestNullService_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1003 eq 'true'">
                  <ctl:message select="'******************** 10.03.RequestInvalidService ********************'" />
                  <ctl:call-test name="sos:IORequestInvalidService_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1004 eq 'true'">
                  <ctl:message select="'******************** 10.04.RequestNoVersion ********************'" />
                  <ctl:call-test name="sos:IORequestNoVersion_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1005 eq 'true'">
                  <ctl:message select="'******************** 10.05.RequestNullVersion ********************'" />
                  <ctl:call-test name="sos:IORequestNullVersion_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1006 eq 'true'">
                  <ctl:message select="'******************** 10.06.RequestInvalidVersion ********************'" />
                  <ctl:call-test name="sos:IORequestInvalidVersion_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1007 eq 'true'">
                  <ctl:message select="'******************** 10.07.RequestNulloffering ********************'" />
                  <ctl:call-test name="sos:IORequestNulloffering_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1008 eq 'true'">
                  <ctl:message select="'******************** 10.08.RequestInvalidoffering ********************'" />
                  <ctl:call-test name="sos:IORequestInvalidoffering_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1009 eq 'true'">
                  <ctl:message select="'******************** 10.09.RequestNullobservationType ********************'" />
                  <ctl:call-test name="sos:IORequestNullobservationType_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1010 eq 'true'">
                  <ctl:message select="'******************** 10.10.RequestInvalidobservationType ********************'" />
                  <ctl:call-test name="sos:IORequestInvalidobservationType_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1011 eq 'true'">
                  <ctl:message select="'******************** 10.11.RequestNullprocedure ********************'" />
                  <ctl:call-test name="sos:IORequestNullprocedure_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1012 eq 'true'">
                  <ctl:message select="'******************** 10.12.RequestInvalidprocedure ********************'" />
                  <ctl:call-test name="sos:IORequestInvalidprocedure_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1013 eq 'true'">
                  <ctl:message select="'******************** 10.13.RequestNullobservedProperty ********************'" />
                  <ctl:call-test name="sos:IORequestNullobservedProperty_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1014 eq 'true'">
                  <ctl:message select="'******************** 10.14.RequestInvalidobservedProperty ********************'" />
                  <ctl:call-test name="sos:IORequestInvalidobservedProperty_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1015 eq 'true'">
                  <ctl:message select="'******************** 10.15.RequestNullfeatureOfInterest ********************'" />
                  <ctl:call-test name="sos:IORequestNullfeatureOfInterest_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1016 eq 'true'">
                  <ctl:message select="'******************** 10.16.RequestInvalidfeatureOfInterest ********************'" />
                  <ctl:call-test name="sos:IORequestInvalidfeatureOfInterest_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1017 eq 'true'">
                  <ctl:message select="'******************** 10.17.RequestNullresultType ********************'" />
                  <ctl:call-test name="sos:IORequestNullresultType_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1018 eq 'true'">
                  <ctl:message select="'******************** 10.18.RequestInvalidresultType ********************'" />
                  <ctl:call-test name="sos:IORequestInvalidresultType_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1019 eq 'true'">
                  <ctl:message select="'******************** 10.19.RequestValidRequest ********************'" />
                  <ctl:call-test name="sos:IORequestValidRequest_obsInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertObservationRootElementName" select="$InsertObservationRootElementName" />
                     <ctl:with-param name="InsertObservationResponseSchemaLocation" select="$InsertObservationResponseSchemaLocation" />
                     <ctl:with-param name="InsertObservationResponseSchemaType" select="$InsertObservationResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="observation" select="$observation" />
                  </ctl:call-test>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1001 Send InsertObservation request without parameter service (KVP) ,the response must be a valid exception with code "MissingParameterValue" and locator "service".. -->
   <!-- 1001 Send InsertObservation request without parameter service (POST or SOAP),the response must be a valid exception with code "InvalidRequest" and locator "Expected attribute: service in element InsertObservation@http://www.opengis.net/sos/2.0".. -->
   <ctl:test name="sos:IORequestNoService_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request (KVP) without parameter "service",and the response must be a valid exception with code "MissingParameterValue" and locator "service". 
			Send a request (POST or SOAP) without parameter "service",and the response must be a valid exception with code "InvalidRequest" and locator "Expected attribute: service in element InsertObservation@http://www.opengis.net/sos/2.0".</ctl:assertion>
      <ctl:comment>Pass if the server (KVP) returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "service"; fail otherwise.
			Pass if the server (POST or SOAP) returns a valid exception message with an exceptionCode "InvalidRequest" and locator is "Expected attribute: service in element InsertObservation@http://www.opengis.net/sos/2.0"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with no service parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidRequest')" />
                        <ctl:with-param name="locatorToCheck" select="string('Expected attribute: service in element InsertObservation@http://www.opengis.net/sos/2.0')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with no service parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidRequest" and a locator of "Expected attribute: service in element InsertObservation@http://www.opengis.net/sos/2.0".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1002 Send InsertObservation request with null parameter service ,the response must be a valid exception with code "MissingParameterValue" and locator "service".. -->
   <ctl:test name="sos:IORequestNullService_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request with null parameter "service",and the response must be a valid exception with code "MissingParameterValue" and locator "service".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "service"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <ctl:message>
            offering:  "
            <xsl:value-of select="$offering" />
            ".
         </ctl:message>
         <!-- send request -->
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with invalid service parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('service')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with null service parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "service".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1003 Send InsertObservation request with invalid parameter service ,the response must be a valid exception with code "InvalidParameterValue" and locator "service".. -->
   <ctl:test name="sos:IORequestInvalidService_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request with invalid parameter "procedure",and the response must be a valid exception with code "InvalidParameterValue" and locator "service".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "service"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="ASDF" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="ASDF" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with invalid service parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('service')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with invalid service parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "service".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1004 Send InsertObservation request without parameter version (KVP),the response must be a valid exception with code "MissingParameterValue" and locator "version".. -->
   <!-- 1004 Send InsertObservation request without parameter version (POST or SOAP),the response must be a valid exception with code "InvalidRequest" and locator "Expected attribute: version in element InsertObservation@http://www.opengis.net/sos/2.0".. -->
   <ctl:test name="sos:IORequestNoVersion_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request (KVP) without parameter "version",and the response must be a valid exception with code "MissingParameterValue" and locator "version". 
			Send a request (POST or SOAP) without parameter "version",and the response must be a valid exception with code "InvalidRequest" and locator "Expected attribute: version in element InsertObservation@http://www.opengis.net/sos/2.0".</ctl:assertion>
      <ctl:comment>Pass if the server (KVP) returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "version"; fail otherwise.
			Pass if the server (POST or SOAP) returns a valid exception message with an exceptionCode "InvalidRequest" and locator is "Expected attribute: version in element InsertObservation@http://www.opengis.net/sos/2.0"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with no version parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidRequest')" />
                        <ctl:with-param name="locatorToCheck" select="string('Expected attribute: version in element InsertObservation@http://www.opengis.net/sos/2.0')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with no version parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidRequest" and a locator of "Expected attribute: version in element InsertObservation@http://www.opengis.net/sos/2.0".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1005 Send InsertObservation request with null parameter version ,the response must be a valid exception with code "MissingParameterValue" and locator "version".. -->
   <ctl:test name="sos:IORequestNullVersion_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request with null parameter "version",and the response must be a valid exception with code "MissingParameterValue" and locator "version".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "version"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with invalid version parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('version')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with null version parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "version".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1006 Send InsertObservation request with invalid parameter version ,the response must be a valid exception with code "InvalidParameterValue" and locator "version".. -->
   <ctl:test name="sos:IORequestInvalidVersion_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request with invalid parameter "version",and the response must be a valid exception with code "InvalidParameterValue" and locator "version".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "version"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="999" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="999" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with invalid version parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('version')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with invalid version parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "version".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1007 Send InsertObservation request with null Element offering ,the response must be a valid exception with code "MissingParameterValue" and locator "offering".. -->
   <ctl:test name="sos:IORequestNulloffering_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request with null parameter "offering",and the response must be a valid exception with code "MissingParameterValue" and locator "offering".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "offering"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering />
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering />
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with invalid offering parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('offering')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with null offering parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "offering".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1008 Send InsertObservation request with invalid Element offering ,the response must be a valid exception with code "InvalidParameterValue" and locator "offering".. -->
   <ctl:test name="sos:IORequestInvalidoffering_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request with invalid parameter "offering",and the response must be a valid exception with code "InvalidParameterValue" and locator "offering".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "offering"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="current-dateTime()" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="current-dateTime()" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with invalid offering parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('offering')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with invalid offering parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "offering".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 不知道怎麼產生observation的內容OM_Observation,所以先用範例的格式 帶入可變的變數-->
   <!-- 1009 Send InsertObservation request with null Element observationType ,the response must be a valid exception with code "MissingParameterValue" and locator "observationType".. -->
   <ctl:test name="sos:IORequestNullobservationType_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request with null parameter "observationType",and the response must be a valid exception with code "MissingParameterValue" and locator "observationType".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "observationType"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <ctl:message>
            The featureOfInterest was:
            <xsl:value-of select="$featureOfInterest" />
         </ctl:message>
         <!-- send request -->
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="''" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="''" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with invalid observationType parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('observationType')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with null observationType parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "observationType".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1010 Send InsertObservation request with invalid Element observationType ,the response must be a valid exception with code "InvalidParameterValue" and locator "observationType".. -->
   <ctl:test name="sos:IORequestInvalidobservationType_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request with invalid parameter "observationType",and the response must be a valid exception with code "InvalidParameterValue" and locator "observationType".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "observationType"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="current-dateTime()" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="current-dateTime()" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with invalid observationType parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('observationType')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with invalid observationType parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "observationType".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1011 Send InsertObservation request with null Element procedure ,the response must be a valid exception with code "MissingParameterValue" and locator "procedure".. -->
   <ctl:test name="sos:IORequestNullprocedure_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request with null parameter "procedure",and the response must be a valid exception with code "MissingParameterValue" and locator "procedure".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "procedure"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="''" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="''" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with invalid procedure parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('procedure')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with null procedure parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "procedure".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1012 Send InsertObservation request with invalid Element procedure ,the response must be a valid exception with code "InvalidParameterValue" and locator "procedure".. -->
   <ctl:test name="sos:IORequestInvalidprocedure_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request with invalid parameter "procedure",and the response must be a valid exception with code "InvalidParameterValue" and locator "procedure".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "procedure"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="current-dateTime()" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="current-dateTime()" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with invalid procedure parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('procedure')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with invalid procedure parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "procedure".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1013 Send InsertObservation request with null Element observedProperty ,the response must be a valid exception with code "MissingParameterValue" and locator "observedProperty".. -->
   <ctl:test name="sos:IORequestNullobservedProperty_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request with null parameter "observedProperty",and the response must be a valid exception with code "MissingParameterValue" and locator "observedProperty".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "observedProperty"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="''" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="''" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with invalid observedProperty parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('observedProperty')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with null observedProperty parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "observedProperty".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1014 Send InsertObservation request with invalid Element observedProperty ,the response must be a valid exception with code "InvalidParameterValue" and locator "observedProperty".. -->
   <ctl:test name="sos:IORequestInvalidobservedProperty_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request with invalid parameter "observedProperty",and the response must be a valid exception with code "InvalidParameterValue" and locator "observedProperty".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "observedProperty"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="current-dateTime()" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="current-dateTime()" />
                                 <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with invalid observedProperty parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('observedProperty')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with invalid observedProperty parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "observedProperty".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1015 Send InsertObservation request with null Element featureOfInterest ,the response must be a valid exception with code "MissingParameterValue" and locator "featureOfInterest".. -->
   <ctl:test name="sos:IORequestNullfeatureOfInterest_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request with null parameter "featureOfInterest",and the response must be a valid exception with code "MissingParameterValue" and locator "featureOfInterest".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "featureOfInterest"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="''" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="''" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with invalid featureOfInterest parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('featureOfInterest')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with null featureOfInterest parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "featureOfInterest".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1016 Send InsertObservation request with invalid Element featureOfInterest ,the response must be a valid exception with code "InvalidParameterValue" and locator "featureOfInterest".. -->
   <ctl:test name="sos:IORequestInvalidfeatureOfInterest_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request with invalid parameter "featureOfInterest",and the response must be a valid exception with code "InvalidParameterValue" and locator "featureOfInterest".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "featureOfInterest"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="current-dateTime()" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <ctl:call-function name="sosFunctions:getOMObservation">
                                 <ctl:with-param name="observationType" select="$observationType" />
                                 <ctl:with-param name="procedure" select="$procedure" />
                                 <ctl:with-param name="observableProperty" select="$observableProperty" />
                                 <ctl:with-param name="featureOfInterest" select="current-dateTime()" />
                              </ctl:call-function>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with invalid featureOfInterest parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('featureOfInterest')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with invalid featureOfInterest parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "featureOfInterest".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1017 Send InsertObservation request with null Element resultType ,the response must be a valid exception with code "MissingParameterValue" and locator "resultType".. -->
   <ctl:test name="sos:IORequestNullresultType_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request with null parameter "resultType",and the response must be a valid exception with code "MissingParameterValue" and locator "resultType".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "resultType"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <om:OM_Observation gml:id="obsTest1">
                                 <xsl:attribute name="gml:id">
                                    <xsl:value-of select="'obsTest1'" />
                                 </xsl:attribute>
                                 <om:type>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$observationType" />
                                    </xsl:attribute>
                                 </om:type>
                                 <om:phenomenonTime>
                                    <gml:TimeInstant gml:id="phenomenonTime">
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'phenomenonTime'" />
                                       </xsl:attribute>
                                       <gml:timePosition>
                                          <xsl:value-of select="current-dateTime()" />
                                       </gml:timePosition>
                                    </gml:TimeInstant>
                                 </om:phenomenonTime>
                                 <om:resultTime>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="'#phenomenonTime'" />
                                    </xsl:attribute>
                                 </om:resultTime>
                                 <om:procedure>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$procedure" />
                                    </xsl:attribute>
                                 </om:procedure>
                                 <om:parameter>
                                    <om:NamedValue>
                                       <om:name>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="'http://www.opengis.net/req/omxml/2.0/data/samplingGeometry'" />
                                          </xsl:attribute>
                                       </om:name>
                                       <om:value>
                                          <gml:Point>
                                             <xsl:attribute name="gml:id">
                                                <xsl:value-of select="'SamplingPoint2'" />
                                             </xsl:attribute>
                                             <gml:pos>
                                                <xsl:attribute name="srsName">
                                                   <xsl:value-of select="'http://www.opengis.net/def/crs/EPSG/0/4326'" />
                                                </xsl:attribute>
                                                <xsl:value-of select="'54.9 10.52'" />
                                             </gml:pos>
                                          </gml:Point>
                                       </om:value>
                                    </om:NamedValue>
                                 </om:parameter>
                                 <om:observedProperty>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$observableProperty" />
                                    </xsl:attribute>
                                 </om:observedProperty>
                                 <om:featureOfInterest>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$featureOfInterest" />
                                    </xsl:attribute>
                                 </om:featureOfInterest>
                                 <om:result>
                                    <xsl:attribute name="xsi:type" />
                                    <xsl:attribute name="uom">
                                       <xsl:value-of select="'urn:ogc:def:uom:OGC:m'" />
                                    </xsl:attribute>
                                    <xsl:value-of select="'0.28'" />
                                 </om:result>
                              </om:OM_Observation>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <om:OM_Observation gml:id="obsTest1">
                                 <xsl:attribute name="gml:id">
                                    <xsl:value-of select="'obsTest1'" />
                                 </xsl:attribute>
                                 <om:type>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$observationType" />
                                    </xsl:attribute>
                                 </om:type>
                                 <om:phenomenonTime>
                                    <gml:TimeInstant gml:id="phenomenonTime">
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'phenomenonTime'" />
                                       </xsl:attribute>
                                       <gml:timePosition>
                                          <xsl:value-of select="current-dateTime()" />
                                       </gml:timePosition>
                                    </gml:TimeInstant>
                                 </om:phenomenonTime>
                                 <om:resultTime>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="'#phenomenonTime'" />
                                    </xsl:attribute>
                                 </om:resultTime>
                                 <om:procedure>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$procedure" />
                                    </xsl:attribute>
                                 </om:procedure>
                                 <om:parameter>
                                    <om:NamedValue>
                                       <om:name>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="'http://www.opengis.net/req/omxml/2.0/data/samplingGeometry'" />
                                          </xsl:attribute>
                                       </om:name>
                                       <om:value>
                                          <gml:Point>
                                             <xsl:attribute name="gml:id">
                                                <xsl:value-of select="'SamplingPoint2'" />
                                             </xsl:attribute>
                                             <gml:pos>
                                                <xsl:attribute name="srsName">
                                                   <xsl:value-of select="'http://www.opengis.net/def/crs/EPSG/0/4326'" />
                                                </xsl:attribute>
                                                <xsl:value-of select="'54.9 10.52'" />
                                             </gml:pos>
                                          </gml:Point>
                                       </om:value>
                                    </om:NamedValue>
                                 </om:parameter>
                                 <om:observedProperty>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$observableProperty" />
                                    </xsl:attribute>
                                 </om:observedProperty>
                                 <om:featureOfInterest>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$featureOfInterest" />
                                    </xsl:attribute>
                                 </om:featureOfInterest>
                                 <om:result>
                                    <xsl:attribute name="xsi:type" />
                                    <xsl:attribute name="uom">
                                       <xsl:value-of select="'urn:ogc:def:uom:OGC:m'" />
                                    </xsl:attribute>
                                    <xsl:value-of select="'0.28'" />
                                 </om:result>
                              </om:OM_Observation>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with invalid resultType parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('resultType')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with null resultType parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "resultType".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1018 Send InsertObservation request with invalid Element resultType ,the response must be a valid exception with code "InvalidParameterValue" and locator "resultType".. -->
   <ctl:test name="sos:IORequestInvalidresultType_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a request with invalid parameter "resultType",and the response must be a valid exception with code "InvalidParameterValue" and locator "resultType".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "resultType"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <om:OM_Observation gml:id="obsTest1">
                                 <xsl:attribute name="gml:id">
                                    <xsl:value-of select="'obsTest1'" />
                                 </xsl:attribute>
                                 <om:type>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$observationType" />
                                    </xsl:attribute>
                                 </om:type>
                                 <om:phenomenonTime>
                                    <gml:TimeInstant gml:id="phenomenonTime">
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'phenomenonTime'" />
                                       </xsl:attribute>
                                       <gml:timePosition>
                                          <xsl:value-of select="current-dateTime()" />
                                       </gml:timePosition>
                                    </gml:TimeInstant>
                                 </om:phenomenonTime>
                                 <om:resultTime>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="'#phenomenonTime'" />
                                    </xsl:attribute>
                                 </om:resultTime>
                                 <om:procedure>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$procedure" />
                                    </xsl:attribute>
                                 </om:procedure>
                                 <om:parameter>
                                    <om:NamedValue>
                                       <om:name>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="'http://www.opengis.net/req/omxml/2.0/data/samplingGeometry'" />
                                          </xsl:attribute>
                                       </om:name>
                                       <om:value>
                                          <gml:Point>
                                             <xsl:attribute name="gml:id">
                                                <xsl:value-of select="'SamplingPoint2'" />
                                             </xsl:attribute>
                                             <gml:pos>
                                                <xsl:attribute name="srsName">
                                                   <xsl:value-of select="'http://www.opengis.net/def/crs/EPSG/0/4326'" />
                                                </xsl:attribute>
                                                <xsl:value-of select="'54.9 10.52'" />
                                             </gml:pos>
                                          </gml:Point>
                                       </om:value>
                                    </om:NamedValue>
                                 </om:parameter>
                                 <om:observedProperty>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$observableProperty" />
                                    </xsl:attribute>
                                 </om:observedProperty>
                                 <om:featureOfInterest>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$featureOfInterest" />
                                    </xsl:attribute>
                                 </om:featureOfInterest>
                                 <om:result>
                                    <xsl:attribute name="xsi:type">
                                       <xsl:value-of select="current-dateTime()" />
                                    </xsl:attribute>
                                    <xsl:attribute name="uom">
                                       <xsl:value-of select="'urn:ogc:def:uom:OGC:m'" />
                                    </xsl:attribute>
                                    <xsl:value-of select="'0.28'" />
                                 </om:result>
                              </om:OM_Observation>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <om:OM_Observation gml:id="obsTest1">
                                 <xsl:attribute name="gml:id">
                                    <xsl:value-of select="'obsTest1'" />
                                 </xsl:attribute>
                                 <om:type>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$observationType" />
                                    </xsl:attribute>
                                 </om:type>
                                 <om:phenomenonTime>
                                    <gml:TimeInstant gml:id="phenomenonTime">
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'phenomenonTime'" />
                                       </xsl:attribute>
                                       <gml:timePosition>
                                          <xsl:value-of select="current-dateTime()" />
                                       </gml:timePosition>
                                    </gml:TimeInstant>
                                 </om:phenomenonTime>
                                 <om:resultTime>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="'#phenomenonTime'" />
                                    </xsl:attribute>
                                 </om:resultTime>
                                 <om:procedure>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$procedure" />
                                    </xsl:attribute>
                                 </om:procedure>
                                 <om:parameter>
                                    <om:NamedValue>
                                       <om:name>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="'http://www.opengis.net/req/omxml/2.0/data/samplingGeometry'" />
                                          </xsl:attribute>
                                       </om:name>
                                       <om:value>
                                          <gml:Point>
                                             <xsl:attribute name="gml:id">
                                                <xsl:value-of select="'SamplingPoint2'" />
                                             </xsl:attribute>
                                             <gml:pos>
                                                <xsl:attribute name="srsName">
                                                   <xsl:value-of select="'http://www.opengis.net/def/crs/EPSG/0/4326'" />
                                                </xsl:attribute>
                                                <xsl:value-of select="'54.9 10.52'" />
                                             </gml:pos>
                                          </gml:Point>
                                       </om:value>
                                    </om:NamedValue>
                                 </om:parameter>
                                 <om:observedProperty>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$observableProperty" />
                                    </xsl:attribute>
                                 </om:observedProperty>
                                 <om:featureOfInterest>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$featureOfInterest" />
                                    </xsl:attribute>
                                 </om:featureOfInterest>
                                 <om:result>
                                    <xsl:attribute name="xsi:type">
                                       <xsl:value-of select="current-dateTime()" />
                                    </xsl:attribute>
                                    <xsl:attribute name="uom">
                                       <xsl:value-of select="'urn:ogc:def:uom:OGC:m'" />
                                    </xsl:attribute>
                                    <xsl:value-of select="'0.28'" />
                                 </om:result>
                              </om:OM_Observation>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertObservationResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertObservation request with invalid resultType parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertObservationResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('resultType')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertObservation request with invalid resultType parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "resultType".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1019 Send valid InsertObservation request, the response must be a valid InsertObservationResponse. -->
   <ctl:test name="sos:IORequestValidRequest_obsInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertObservationRootElementName" />
      <ctl:param name="InsertObservationResponseSchemaLocation" />
      <ctl:param name="InsertObservationResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observation" />
      <ctl:assertion>Send a valid request ,and there must be have a valid InsertObservationResponse returned.</ctl:assertion>
      <ctl:comment>Pass if the response is a valid InsertObservationResponse and has an observation element in the response; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="InsertObservationResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <om:OM_Observation gml:id="obsTest1">
                                 <xsl:attribute name="gml:id">
                                    <xsl:value-of select="'obsTest1'" />
                                 </xsl:attribute>
                                 <om:type>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$observationType" />
                                    </xsl:attribute>
                                 </om:type>
                                 <om:phenomenonTime>
                                    <gml:TimeInstant gml:id="phenomenonTime">
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'phenomenonTime'" />
                                       </xsl:attribute>
                                       <gml:timePosition>
                                          <xsl:value-of select="current-dateTime()" />
                                       </gml:timePosition>
                                    </gml:TimeInstant>
                                 </om:phenomenonTime>
                                 <om:resultTime>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="'#phenomenonTime'" />
                                    </xsl:attribute>
                                 </om:resultTime>
                                 <om:procedure>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$procedure" />
                                    </xsl:attribute>
                                 </om:procedure>
                                 <om:parameter>
                                    <om:NamedValue>
                                       <om:name>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="'http://www.opengis.net/req/omxml/2.0/data/samplingGeometry'" />
                                          </xsl:attribute>
                                       </om:name>
                                       <om:value>
                                          <gml:Point>
                                             <xsl:attribute name="gml:id">
                                                <xsl:value-of select="'SamplingPoint2'" />
                                             </xsl:attribute>
                                             <gml:pos>
                                                <xsl:attribute name="srsName">
                                                   <xsl:value-of select="'http://www.opengis.net/def/crs/EPSG/0/4326'" />
                                                </xsl:attribute>
                                                <xsl:value-of select="'54.9 10.52'" />
                                             </gml:pos>
                                          </gml:Point>
                                       </om:value>
                                    </om:NamedValue>
                                 </om:parameter>
                                 <om:observedProperty>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$observableProperty" />
                                    </xsl:attribute>
                                 </om:observedProperty>
                                 <om:featureOfInterest>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$featureOfInterest" />
                                    </xsl:attribute>
                                 </om:featureOfInterest>
                                 <om:result>
                                    <xsl:attribute name="xsi:type">
                                       <xsl:value-of select="'gml:MeasureType'" />
                                    </xsl:attribute>
                                    <xsl:attribute name="uom">
                                       <xsl:value-of select="'urn:ogc:def:uom:OGC:m'" />
                                    </xsl:attribute>
                                    <xsl:value-of select="'0.28'" />
                                 </om:result>
                              </om:OM_Observation>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <parsers:SOAPParser return="content">
                        <parsers:XMLValidatingParser>
                           <parsers:schemas>
                              <parsers:schema>
                                 <xsl:attribute name="type">
                                    <xsl:value-of select="$InsertObservationResponseSchemaType" />
                                 </xsl:attribute>
                                 <xsl:value-of select="$InsertObservationResponseSchemaLocation" />
                              </parsers:schema>
                           </parsers:schemas>
                        </parsers:XMLValidatingParser>
                     </parsers:SOAPParser>
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:offering>
                              <xsl:value-of select="$offering" />
                           </sos:offering>
                           <sos:observation>
                              <om:OM_Observation gml:id="obsTest1">
                                 <xsl:attribute name="gml:id">
                                    <xsl:value-of select="'obsTest1'" />
                                 </xsl:attribute>
                                 <om:type>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$observationType" />
                                    </xsl:attribute>
                                 </om:type>
                                 <om:phenomenonTime>
                                    <gml:TimeInstant gml:id="phenomenonTime">
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'phenomenonTime'" />
                                       </xsl:attribute>
                                       <gml:timePosition>
                                          <xsl:value-of select="current-dateTime()" />
                                       </gml:timePosition>
                                    </gml:TimeInstant>
                                 </om:phenomenonTime>
                                 <om:resultTime>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="'#phenomenonTime'" />
                                    </xsl:attribute>
                                 </om:resultTime>
                                 <om:procedure>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$procedure" />
                                    </xsl:attribute>
                                 </om:procedure>
                                 <om:parameter>
                                    <om:NamedValue>
                                       <om:name>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="'http://www.opengis.net/req/omxml/2.0/data/samplingGeometry'" />
                                          </xsl:attribute>
                                       </om:name>
                                       <om:value>
                                          <gml:Point>
                                             <xsl:attribute name="gml:id">
                                                <xsl:value-of select="'SamplingPoint2'" />
                                             </xsl:attribute>
                                             <gml:pos>
                                                <xsl:attribute name="srsName">
                                                   <xsl:value-of select="'http://www.opengis.net/def/crs/EPSG/0/4326'" />
                                                </xsl:attribute>
                                                <xsl:value-of select="'54.9 10.52'" />
                                             </gml:pos>
                                          </gml:Point>
                                       </om:value>
                                    </om:NamedValue>
                                 </om:parameter>
                                 <om:observedProperty>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$observableProperty" />
                                    </xsl:attribute>
                                 </om:observedProperty>
                                 <om:featureOfInterest>
                                    <xsl:attribute name="xlink:href">
                                       <xsl:value-of select="$featureOfInterest" />
                                    </xsl:attribute>
                                 </om:featureOfInterest>
                                 <om:result>
                                    <xsl:attribute name="xsi:type">
                                       <xsl:value-of select="'gml:MeasureType'" />
                                    </xsl:attribute>
                                    <xsl:attribute name="uom">
                                       <xsl:value-of select="'urn:ogc:def:uom:OGC:m'" />
                                    </xsl:attribute>
                                    <xsl:value-of select="'0.28'" />
                                 </om:result>
                              </om:OM_Observation>
                           </sos:observation>
                        </sos:InsertObservation>
                     </ctl:body>
                     <parsers:XMLValidatingParser>
                        <parsers:schemas>
                           <parsers:schema type="resource">xsd/w3c/xml.xsd</parsers:schema>
                           <parsers:schema>
                              <xsl:attribute name="type">
                                 <xsl:value-of select="$InsertObservationResponseSchemaType" />
                              </xsl:attribute>
                              <xsl:value-of select="$InsertObservationResponseSchemaLocation" />
                           </parsers:schema>
                        </parsers:schemas>
                     </parsers:XMLValidatingParser>
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertObservationResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertObservation response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertObservationResponse/*">
                  <xsl:variable name="responseRoot" select="local-name-from-QName(node-name($InsertObservationResponse/*[1]))" />
                  <xsl:variable name="responseRoot2" select="local-name-from-QName(node-name($InsertObservationResponse/soap12:Envelope/soap12:Body/*[1]))" />
                  <xsl:if test="not($responseRoot=$InsertObservationRootElementName) and not($responseRoot2=$InsertObservationRootElementName)">
                     <ctl:message>
                        FAILURE:  The root element from the response to a InsertObservation request "
                        <xsl:value-of select="$responseRoot" />
                        " does not match the expected root element of "
                        <xsl:value-of select="$InsertObservationRootElementName" />
                        "
                     </ctl:message>
                     <ctl:fail />
                  </xsl:if>
                  <!-- 1.response has one and only one observation -->
                  <xsl:variable name="observationCount" select="count($InsertObservationResponse//sos:observation)" />
                  <xsl:if test="not($observationCount=1)">
                     <ctl:message>
                        FAILURE:  The count of sos:observation "
                        <xsl:value-of select="$observationCount" />
                        " must be 1.
                     </ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
</ctl:package>