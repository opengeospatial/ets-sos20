<ctl:package xmlns:ctl="http://www.occamlab.com/ctl" xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:om="http://www.opengis.net/om/2.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:owsTests="http://www.opengis.net/ows/1.1" xmlns:parsers="http://www.occamlab.com/te/parsers" xmlns:sml="http://www.opengis.net/sensorML/1.0.1" xmlns:soap11="http://schemas.xmlsoap.org/soap/" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope" xmlns:sos="http://www.opengis.net/sos/2.0" xmlns:sosFunctions="http://www.opengis.net/sos/2.0" xmlns:swe="http://www.opengis.net/swe/2.0" xmlns:swes="http://www.opengis.net/swes/2.0" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<!-- 11.SOS resultHandling: InsertResultTemplate -->
   <ctl:test name="sos:InsertResultTemplate-Test" isConformanceClass="true">
      <ctl:param name="GetCapabilitiesURL" />
      <ctl:param name="isGetCapabilitiesGET" />
      <ctl:param name="capabilitiesResponseSchemaType" />
      <ctl:param name="capabilitiesResponseSchemaLocation" />
      <ctl:param name="GetObservationURL" />
      <ctl:param name="isGetObservationGET" />
      <ctl:param name="observationResponseSchemaType" />
      <ctl:param name="observationResponseSchemaLocation" />
      <ctl:param name="serviceURL" />
      <ctl:param name="hasIRT" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="serviceType" />
      <ctl:param name="serviceVersion" />
      <ctl:param name="InsertResultTemplateRootElementName" />
      <ctl:param name="InsertResultTemplateResponseSchemaLocation" />
      <ctl:param name="InsertResultTemplateResponseSchemaType" />
      <ctl:param name="InsertResultTemplateResponseContentType" />
      <ctl:param name="test1101" />
      <ctl:param name="test1102" />
      <ctl:param name="test1103" />
      <ctl:param name="test1104" />
      <ctl:param name="test1105" />
      <ctl:param name="test1106" />
      <ctl:param name="test1107" />
      <ctl:param name="test1108" />
      <ctl:param name="test1109" />
      <ctl:param name="test12" />
      <ctl:param name="InsertResult-URL" />
      <ctl:param name="hasInsertResult" />
      <ctl:param name="InsertResultRootElementName" />
      <ctl:param name="InsertResultResponseSchemaLocation" />
      <ctl:param name="InsertResultResponseSchemaType" />
      <ctl:param name="InsertResultResponseContentType" />
      <ctl:param name="test1201" />
      <ctl:param name="test1202" />
      <ctl:param name="test1203" />
      <ctl:param name="test1204" />
      <ctl:param name="test1205" />
      <ctl:param name="test1206" />
      <ctl:param name="test1207" />
      <ctl:param name="test1208" />
      <ctl:param name="test1209" />
      <ctl:param name="test1210" />
      <ctl:param name="test1211" />
      <ctl:assertion>Execute InsertResultTemplate Test.</ctl:assertion>
      <ctl:comment>Pass if all the subtest not fail; fail otherwise.</ctl:comment>
      <ctl:code>
         <xsl:choose>
            <xsl:when test="$hasIRT eq 'false'">
               <ctl:message>The server does not support the operation "InsertResultTemplate", so skip this test.</ctl:message>
            </xsl:when>
            <xsl:otherwise>
               <!-- get a valid offering-->
               <xsl:variable name="offering" select="$getCapabilitiesResponse//sos:contents//swes:offering[1]//swes:identifier" />
               <!-- Get a valid observationType -->
               <xsl:variable name="observationType" select="$getCapabilitiesResponse//sos:contents//swes:offering[1]//sos:observationType" />
               <!-- get a valid procedure-->
               <xsl:variable name="procedure" select="$getCapabilitiesResponse//sos:contents//swes:offering[1]//swes:procedure[1]" />
               <!-- get a valid observableProperty-->
               <xsl:variable name="observableProperty" select="$getCapabilitiesResponse//sos:contents//swes:offering[1]//swes:observableProperty[1]" />
               <!-- get a valid featureOfInterest From GetObservation-->
               <xsl:variable name="getObservationResponse">
                  <xsl:choose>
                     <xsl:when test="($isGetObservationGET eq 'true')">
                        <ctl:request>
                           <ctl:url>
                              <xsl:value-of select="$GetObservationURL" />
                           </ctl:url>
                           <ctl:method>get</ctl:method>
                           <ctl:param name="service">SOS</ctl:param>
                           <ctl:param name="version">2.0.0</ctl:param>
                           <ctl:param name="request">GetObservation</ctl:param>
                           <ctl:param name="procedure">
                              <xsl:value-of select="$procedure" />
                           </ctl:param>
                           <ctl:param name="offering">
                              <xsl:value-of select="$offering" />
                           </ctl:param>
                           <ctl:param name="observedProperty">
                              <xsl:value-of select="$observableProperty" />
                           </ctl:param>
                           <parsers:XMLValidatingParser>
                              <parsers:schemas>
                                 <parsers:schema type="resource">xsd/w3c/xml.xsd</parsers:schema>
                                 <parsers:schema type="url">http://schemas.opengis.net/samplingSpatial/2.0/spatialSamplingFeature.xsd</parsers:schema>
                                 <parsers:schema>
                                    <xsl:attribute name="type">
                                       <xsl:value-of select="$observationResponseSchemaType" />
                                    </xsl:attribute>
                                    <xsl:value-of select="$observationResponseSchemaLocation" />
                                 </parsers:schema>
                              </parsers:schemas>
                           </parsers:XMLValidatingParser>
                        </ctl:request>
                     </xsl:when>
                     <xsl:when test="$isSOAP eq 'true'">
                        <ctl:soap-request version="1.2" charset="UTF-8">
                           <ctl:url>
                              <xsl:value-of select="$GetObservationURL" />
                           </ctl:url>
                           <ctl:body>
                              <sos:GetObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd              http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                                 <sos:procedure>
                                    <xsl:value-of select="$procedure" />
                                 </sos:procedure>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observedProperty>
                                    <xsl:value-of select="$observableProperty" />
                                 </sos:observedProperty>
                              </sos:GetObservation>
                           </ctl:body>
                           <parsers:SOAPParser return="content">
                              <parsers:XMLValidatingParser>
                                 <parsers:schemas>
                                    <parsers:schema type="url">http://schemas.opengis.net/samplingSpatial/2.0/spatialSamplingFeature.xsd</parsers:schema>
                                    <parsers:schema>
                                       <xsl:attribute name="type">
                                          <xsl:value-of select="$observationResponseSchemaType" />
                                       </xsl:attribute>
                                       <xsl:value-of select="$observationResponseSchemaLocation" />
                                    </parsers:schema>
                                 </parsers:schemas>
                              </parsers:XMLValidatingParser>
                           </parsers:SOAPParser>
                        </ctl:soap-request>
                     </xsl:when>
                     <xsl:otherwise>
                        <ctl:request>
                           <ctl:url>
                              <xsl:value-of select="$GetObservationURL" />
                           </ctl:url>
                           <ctl:method>post</ctl:method>
                           <ctl:body>
                              <sos:GetObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd              http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                                 <sos:procedure>
                                    <xsl:value-of select="$procedure" />
                                 </sos:procedure>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observedProperty>
                                    <xsl:value-of select="$observableProperty" />
                                 </sos:observedProperty>
                              </sos:GetObservation>
                           </ctl:body>
                           <parsers:XMLValidatingParser>
                              <parsers:schemas>
                                 <parsers:schema type="resource">xsd/w3c/xml.xsd</parsers:schema>
                                 <parsers:schema type="url">http://schemas.opengis.net/samplingSpatial/2.0/spatialSamplingFeature.xsd</parsers:schema>
                                 <parsers:schema>
                                    <xsl:attribute name="type">
                                       <xsl:value-of select="$observationResponseSchemaType" />
                                    </xsl:attribute>
                                    <xsl:value-of select="$observationResponseSchemaLocation" />
                                 </parsers:schema>
                              </parsers:schemas>
                           </parsers:XMLValidatingParser>
                        </ctl:request>
                     </xsl:otherwise>
                  </xsl:choose>
               </xsl:variable>
               <xsl:variable name="featureOfInterest" select="$getObservationResponse//om:featureOfInterest[1]/@xlink:href" />
               <xsl:if test="$test1101 eq 'true'">
                  <ctl:message select="'******************** 11.01.RequestNoService ********************'" />
                  <ctl:call-test name="sos:IRTRequestNoService_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultTemplateRootElementName" select="$InsertResultTemplateRootElementName" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaLocation" select="$InsertResultTemplateResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaType" select="$InsertResultTemplateResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1102 eq 'true'">
                  <ctl:message select="'******************** 11.02.RequestNullService ********************'" />
                  <ctl:call-test name="sos:IRTRequestNullService_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultTemplateRootElementName" select="$InsertResultTemplateRootElementName" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaLocation" select="$InsertResultTemplateResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaType" select="$InsertResultTemplateResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1103 eq 'true'">
                  <ctl:message select="'******************** 11.03.RequestInvalidService ********************'" />
                  <ctl:call-test name="sos:IRTRequestInvalidService_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultTemplateRootElementName" select="$InsertResultTemplateRootElementName" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaLocation" select="$InsertResultTemplateResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaType" select="$InsertResultTemplateResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1104 eq 'true'">
                  <ctl:message select="'******************** 11.04.RequestNoVersion ********************'" />
                  <ctl:call-test name="sos:IRTRequestNoVersion_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultTemplateRootElementName" select="$InsertResultTemplateRootElementName" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaLocation" select="$InsertResultTemplateResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaType" select="$InsertResultTemplateResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1105 eq 'true'">
                  <ctl:message select="'******************** 11.05.RequestNullVersion ********************'" />
                  <ctl:call-test name="sos:IRTRequestNullVersion_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultTemplateRootElementName" select="$InsertResultTemplateRootElementName" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaLocation" select="$InsertResultTemplateResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaType" select="$InsertResultTemplateResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1106 eq 'true'">
                  <ctl:message select="'******************** 11.06.RequestInvalidVersion ********************'" />
                  <ctl:call-test name="sos:IRTRequestInvalidVersion_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultTemplateRootElementName" select="$InsertResultTemplateRootElementName" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaLocation" select="$InsertResultTemplateResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaType" select="$InsertResultTemplateResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1107 eq 'true'">
                  <ctl:message select="'******************** 11.07.RequestInvalidobservationType ********************'" />
                  <ctl:call-test name="sos:IRTRequestInvalidobservationType_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultTemplateRootElementName" select="$InsertResultTemplateRootElementName" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaLocation" select="$InsertResultTemplateResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaType" select="$InsertResultTemplateResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1108 eq 'true'">
                  <ctl:message select="'******************** 11.08.RequestValidRequest ********************'" />
                  <ctl:call-test name="sos:IRTRequestValidRequest_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultTemplateRootElementName" select="$InsertResultTemplateRootElementName" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaLocation" select="$InsertResultTemplateResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaType" select="$InsertResultTemplateResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                     <ctl:with-param name="test12" select="$test12" />
                     <ctl:with-param name="InsertResult-URL" select="$InsertResult-URL" />
                     <ctl:with-param name="hasInsertResult" select="$hasInsertResult" />
                     <ctl:with-param name="InsertResultRootElementName" select="$InsertResultRootElementName" />
                     <ctl:with-param name="InsertResultResponseSchemaLocation" select="$InsertResultResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultResponseSchemaType" select="$InsertResultResponseSchemaType" />
                     <ctl:with-param name="InsertResultResponseContentType" select="$InsertResultResponseContentType" />
                     <ctl:with-param name="test1201" select="$test1201" />
                     <ctl:with-param name="test1202" select="$test1202" />
                     <ctl:with-param name="test1203" select="$test1203" />
                     <ctl:with-param name="test1204" select="$test1204" />
                     <ctl:with-param name="test1205" select="$test1205" />
                     <ctl:with-param name="test1206" select="$test1206" />
                     <ctl:with-param name="test1207" select="$test1207" />
                     <ctl:with-param name="test1208" select="$test1208" />
                     <ctl:with-param name="test1209" select="$test1209" />
                     <ctl:with-param name="test1210" select="$test1210" />
                     <ctl:with-param name="test1211" select="$test1211" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1109 eq 'true'">
                  <ctl:message select="'******************** 11.09.RequestInvalidproposedTemplate ********************'" />
                  <ctl:call-test name="sos:IRTRequestInvalidproposedTemplate_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultTemplateRootElementName" select="$InsertResultTemplateRootElementName" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaLocation" select="$InsertResultTemplateResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultTemplateResponseSchemaType" select="$InsertResultTemplateResponseSchemaType" />
                     <ctl:with-param name="offering" select="$offering" />
                     <ctl:with-param name="observationType" select="$observationType" />
                     <ctl:with-param name="procedure" select="$procedure" />
                     <ctl:with-param name="observableProperty" select="$observableProperty" />
                     <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                  </ctl:call-test>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1101 Send InsertResultTemplate request (KVP) without parameter service ,the response must be a valid exception with code "MissingParameterValue" and locator "service".. -->
   <!-- 1101 Send InsertResultTemplate request (POST or SOAP) without parameter service ,the response must be a valid exception with code "InvalidRequest" and locator "Expected attribute: service in element InsertResultTemplate@http://www.opengis.net/sos/2.0".. -->
   <ctl:test name="sos:IRTRequestNoService_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultTemplateRootElementName" />
      <ctl:param name="InsertResultTemplateResponseSchemaLocation" />
      <ctl:param name="InsertResultTemplateResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:assertion>Send a request (KVP) without parameter "service",and the response must be a valid exception with code "MissingParameterValue" and locator "service". 
			Send a request (POST or SOAP) without parameter "service",and the response must be a valid exception with code "InvalidRequest" and locator "Expected attribute: service in element InsertResultTemplate@http://www.opengis.net/sos/2.0".</ctl:assertion>
      <ctl:comment>Pass if the server (KVP) returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "service"; fail otherwise.
			Pass if the server (POST or SOAP) returns a valid exception message with an exceptionCode "InvalidRequest" and locator is "Expected attribute: service in element InsertResultTemplate@http://www.opengis.net/sos/2.0"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertResultTemplateResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResultTemplate version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <om:OM_Observation>
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'sensor2obsTemplate'" />
                                       </xsl:attribute>
                                       <om:phenomenonTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:phenomenonTime>
                                       <om:resultTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:resultTime>
                                       <om:procedure>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$procedure" />
                                          </xsl:attribute>
                                       </om:procedure>
                                       <om:observedProperty>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$observableProperty" />
                                          </xsl:attribute>
                                       </om:observedProperty>
                                       <om:featureOfInterest>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$featureOfInterest" />
                                          </xsl:attribute>
                                       </om:featureOfInterest>
                                       <om:result />
                                    </om:OM_Observation>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResultTemplate version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <om:OM_Observation>
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'sensor2obsTemplate'" />
                                       </xsl:attribute>
                                       <om:phenomenonTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:phenomenonTime>
                                       <om:resultTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:resultTime>
                                       <om:procedure>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$procedure" />
                                          </xsl:attribute>
                                       </om:procedure>
                                       <om:observedProperty>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$observableProperty" />
                                          </xsl:attribute>
                                       </om:observedProperty>
                                       <om:featureOfInterest>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$featureOfInterest" />
                                          </xsl:attribute>
                                       </om:featureOfInterest>
                                       <om:result />
                                    </om:OM_Observation>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultTemplateResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResultTemplate response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultTemplateResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultTemplateResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultTemplateResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResultTemplate request with no service parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultTemplateResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidRequest')" />
                        <ctl:with-param name="locatorToCheck" select="string('Expected attribute: service in element InsertResultTemplate@http://www.opengis.net/sos/2.0')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResultTemplate request with no service parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidRequest" and a locator of "Expected attribute: service in element InsertResultTemplate@http://www.opengis.net/sos/2.0".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1102 Send InsertResultTemplate request with null parameter service ,the response must be a valid exception with code "MissingParameterValue" and locator "service".. -->
   <ctl:test name="sos:IRTRequestNullService_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultTemplateRootElementName" />
      <ctl:param name="InsertResultTemplateResponseSchemaLocation" />
      <ctl:param name="InsertResultTemplateResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:assertion>Send a request with null parameter "service",and the response must be a valid exception with code "MissingParameterValue" and locator "service".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "service"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertResultTemplateResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResultTemplate service="" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <om:OM_Observation>
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'sensor2obsTemplate'" />
                                       </xsl:attribute>
                                       <om:phenomenonTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:phenomenonTime>
                                       <om:resultTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:resultTime>
                                       <om:procedure>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$procedure" />
                                          </xsl:attribute>
                                       </om:procedure>
                                       <om:observedProperty>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$observableProperty" />
                                          </xsl:attribute>
                                       </om:observedProperty>
                                       <om:featureOfInterest>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$featureOfInterest" />
                                          </xsl:attribute>
                                       </om:featureOfInterest>
                                       <om:result />
                                    </om:OM_Observation>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResultTemplate service="" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <om:OM_Observation>
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'sensor2obsTemplate'" />
                                       </xsl:attribute>
                                       <om:phenomenonTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:phenomenonTime>
                                       <om:resultTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:resultTime>
                                       <om:procedure>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$procedure" />
                                          </xsl:attribute>
                                       </om:procedure>
                                       <om:observedProperty>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$observableProperty" />
                                          </xsl:attribute>
                                       </om:observedProperty>
                                       <om:featureOfInterest>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$featureOfInterest" />
                                          </xsl:attribute>
                                       </om:featureOfInterest>
                                       <om:result />
                                    </om:OM_Observation>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultTemplateResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResultTemplate response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultTemplateResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultTemplateResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultTemplateResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResultTemplate request with invalid service parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultTemplateResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('service')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResultTemplate request with null service parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "service".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1103 Send InsertResultTemplate request with invalid parameter service ,the response must be a valid exception with code "InvalidParameterValue" and locator "service".. -->
   <ctl:test name="sos:IRTRequestInvalidService_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultTemplateRootElementName" />
      <ctl:param name="InsertResultTemplateResponseSchemaLocation" />
      <ctl:param name="InsertResultTemplateResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:assertion>Send a request with invalid parameter "procedure",and the response must be a valid exception with code "InvalidParameterValue" and locator "service".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "service"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="InsertResultTemplateResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResultTemplate service="ASDF" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <om:OM_Observation>
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'sensor2obsTemplate'" />
                                       </xsl:attribute>
                                       <om:phenomenonTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:phenomenonTime>
                                       <om:resultTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:resultTime>
                                       <om:procedure>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$procedure" />
                                          </xsl:attribute>
                                       </om:procedure>
                                       <om:observedProperty>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$observableProperty" />
                                          </xsl:attribute>
                                       </om:observedProperty>
                                       <om:featureOfInterest>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$featureOfInterest" />
                                          </xsl:attribute>
                                       </om:featureOfInterest>
                                       <om:result />
                                    </om:OM_Observation>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResultTemplate service="ASDF" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <om:OM_Observation>
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'sensor2obsTemplate'" />
                                       </xsl:attribute>
                                       <om:phenomenonTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:phenomenonTime>
                                       <om:resultTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:resultTime>
                                       <om:procedure>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$procedure" />
                                          </xsl:attribute>
                                       </om:procedure>
                                       <om:observedProperty>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$observableProperty" />
                                          </xsl:attribute>
                                       </om:observedProperty>
                                       <om:featureOfInterest>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$featureOfInterest" />
                                          </xsl:attribute>
                                       </om:featureOfInterest>
                                       <om:result />
                                    </om:OM_Observation>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultTemplateResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResultTemplate response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultTemplateResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultTemplateResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultTemplateResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResultTemplate request with invalid service parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultTemplateResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('service')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResultTemplate request with invalid service parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "service".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1104 Send InsertResultTemplate request (KVP) without parameter version ,the response must be a valid exception with code "MissingParameterValue" and locator "version".. -->
   <!-- 1104 Send InsertResultTemplate request (POST or SOAP) without parameter version ,the response must be a valid exception with code "InvalidRequest" and locator "Expected attribute: version in element InsertResultTemplate@http://www.opengis.net/sos/2.0".. -->
   <ctl:test name="sos:IRTRequestNoVersion_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultTemplateRootElementName" />
      <ctl:param name="InsertResultTemplateResponseSchemaLocation" />
      <ctl:param name="InsertResultTemplateResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:assertion>Send a request (KVP) without parameter "version",and the response must be a valid exception with code "MissingParameterValue" and locator "version". 
			Send a request (POST or SOAP) without parameter "version",and the response must be a valid exception with code "InvalidRequest" and locator "Expected attribute: service in element InsertResultTemplate@http://www.opengis.net/sos/2.0".</ctl:assertion>
      <ctl:comment>Pass if the server (KVP) returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "version"; fail otherwise.
			Pass if the server (POST or SOAP) returns a valid exception message with an exceptionCode "InvalidRequest" and locator is "Expected attribute: version in element InsertResultTemplate@http://www.opengis.net/sos/2.0"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertResultTemplateResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResultTemplate service="SOS" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <om:OM_Observation>
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'sensor2obsTemplate'" />
                                       </xsl:attribute>
                                       <om:phenomenonTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:phenomenonTime>
                                       <om:resultTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:resultTime>
                                       <om:procedure>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$procedure" />
                                          </xsl:attribute>
                                       </om:procedure>
                                       <om:observedProperty>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$observableProperty" />
                                          </xsl:attribute>
                                       </om:observedProperty>
                                       <om:featureOfInterest>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$featureOfInterest" />
                                          </xsl:attribute>
                                       </om:featureOfInterest>
                                       <om:result />
                                    </om:OM_Observation>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResultTemplate service="SOS" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <om:OM_Observation>
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'sensor2obsTemplate'" />
                                       </xsl:attribute>
                                       <om:phenomenonTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:phenomenonTime>
                                       <om:resultTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:resultTime>
                                       <om:procedure>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$procedure" />
                                          </xsl:attribute>
                                       </om:procedure>
                                       <om:observedProperty>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$observableProperty" />
                                          </xsl:attribute>
                                       </om:observedProperty>
                                       <om:featureOfInterest>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$featureOfInterest" />
                                          </xsl:attribute>
                                       </om:featureOfInterest>
                                       <om:result />
                                    </om:OM_Observation>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultTemplateResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResultTemplate response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultTemplateResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultTemplateResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultTemplateResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResultTemplate request with no version parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultTemplateResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidRequest')" />
                        <ctl:with-param name="locatorToCheck" select="string('Expected attribute: version in element InsertResultTemplate@http://www.opengis.net/sos/2.0')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResultTemplate request with no version parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidRequest" and a locator of "Expected attribute: version in element InsertResultTemplate@http://www.opengis.net/sos/2.0".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1105 Send InsertResultTemplate request with null parameter version ,the response must be a valid exception with code "MissingParameterValue" and locator "version".. -->
   <ctl:test name="sos:IRTRequestNullVersion_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultTemplateRootElementName" />
      <ctl:param name="InsertResultTemplateResponseSchemaLocation" />
      <ctl:param name="InsertResultTemplateResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:assertion>Send a request with null parameter "version",and the response must be a valid exception with code "MissingParameterValue" and locator "version".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "version"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertResultTemplateResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResultTemplate service="SOS" version="" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <om:OM_Observation>
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'sensor2obsTemplate'" />
                                       </xsl:attribute>
                                       <om:phenomenonTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:phenomenonTime>
                                       <om:resultTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:resultTime>
                                       <om:procedure>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$procedure" />
                                          </xsl:attribute>
                                       </om:procedure>
                                       <om:observedProperty>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$observableProperty" />
                                          </xsl:attribute>
                                       </om:observedProperty>
                                       <om:featureOfInterest>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$featureOfInterest" />
                                          </xsl:attribute>
                                       </om:featureOfInterest>
                                       <om:result />
                                    </om:OM_Observation>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResultTemplate service="SOS" version="" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <om:OM_Observation>
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'sensor2obsTemplate'" />
                                       </xsl:attribute>
                                       <om:phenomenonTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:phenomenonTime>
                                       <om:resultTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:resultTime>
                                       <om:procedure>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$procedure" />
                                          </xsl:attribute>
                                       </om:procedure>
                                       <om:observedProperty>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$observableProperty" />
                                          </xsl:attribute>
                                       </om:observedProperty>
                                       <om:featureOfInterest>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$featureOfInterest" />
                                          </xsl:attribute>
                                       </om:featureOfInterest>
                                       <om:result />
                                    </om:OM_Observation>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultTemplateResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResultTemplate response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultTemplateResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultTemplateResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultTemplateResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResultTemplate request with invalid version parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultTemplateResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('version')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResultTemplate request with null version parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "version".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1106 Send InsertResultTemplate request with invalid parameter version ,the response must be a valid exception with code "InvalidParameterValue" and locator "version".. -->
   <ctl:test name="sos:IRTRequestInvalidVersion_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultTemplateRootElementName" />
      <ctl:param name="InsertResultTemplateResponseSchemaLocation" />
      <ctl:param name="InsertResultTemplateResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:assertion>Send a request with invalid parameter "version",and the response must be a valid exception with code "InvalidParameterValue" and locator "version".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "version"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="InsertResultTemplateResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResultTemplate service="SOS" version="999" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <om:OM_Observation>
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'sensor2obsTemplate'" />
                                       </xsl:attribute>
                                       <om:phenomenonTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:phenomenonTime>
                                       <om:resultTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:resultTime>
                                       <om:procedure>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$procedure" />
                                          </xsl:attribute>
                                       </om:procedure>
                                       <om:observedProperty>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$observableProperty" />
                                          </xsl:attribute>
                                       </om:observedProperty>
                                       <om:featureOfInterest>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$featureOfInterest" />
                                          </xsl:attribute>
                                       </om:featureOfInterest>
                                       <om:result />
                                    </om:OM_Observation>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResultTemplate service="SOS" version="999" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <om:OM_Observation>
                                       <xsl:attribute name="gml:id">
                                          <xsl:value-of select="'sensor2obsTemplate'" />
                                       </xsl:attribute>
                                       <om:phenomenonTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:phenomenonTime>
                                       <om:resultTime>
                                          <xsl:attribute name="nilReason">
                                             <xsl:value-of select="'template'" />
                                          </xsl:attribute>
                                       </om:resultTime>
                                       <om:procedure>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$procedure" />
                                          </xsl:attribute>
                                       </om:procedure>
                                       <om:observedProperty>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$observableProperty" />
                                          </xsl:attribute>
                                       </om:observedProperty>
                                       <om:featureOfInterest>
                                          <xsl:attribute name="xlink:href">
                                             <xsl:value-of select="$featureOfInterest" />
                                          </xsl:attribute>
                                       </om:featureOfInterest>
                                       <om:result />
                                    </om:OM_Observation>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultTemplateResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResultTemplate response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultTemplateResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultTemplateResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultTemplateResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResultTemplate request with invalid version parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultTemplateResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('version')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResultTemplate request with invalid version parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "version".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1107 Send InsertResultTemplate request with invalid Element observationType ,the response must be a valid exception with code "InvalidParameterValue" and locator "observationType".. -->
   <ctl:test name="sos:IRTRequestInvalidobservationType_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultTemplateRootElementName" />
      <ctl:param name="InsertResultTemplateResponseSchemaLocation" />
      <ctl:param name="InsertResultTemplateResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:assertion>Send a request with invalid parameter "observationType",and the response must be a valid exception with code "InvalidParameterValue" and locator "observationType".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "observationType"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- use OM_GeometryObservation instead of OM_Observation -->
         <xsl:variable name="InsertResultTemplateResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResultTemplate service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <swes:identifier>
                                    <xsl:value-of select="$procedure" />
                                    /template/
                                    <xsl:value-of select="current-dateTime()" />
                                 </swes:identifier>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <ctl:call-function name="sosFunctions:getOMObservationTemplate">
                                       <ctl:with-param name="procedure" select="$procedure" />
                                       <ctl:with-param name="observableProperty" select="$observableProperty" />
                                       <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                                    </ctl:call-function>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResultTemplate service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <swes:identifier>
                                    <xsl:value-of select="$procedure" />
                                    /template/
                                    <xsl:value-of select="current-dateTime()" />
                                 </swes:identifier>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <ctl:call-function name="sosFunctions:getOMObservationTemplate">
                                       <ctl:with-param name="procedure" select="$procedure" />
                                       <ctl:with-param name="observableProperty" select="$observableProperty" />
                                       <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                                    </ctl:call-function>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultTemplateResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResultTemplate response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultTemplateResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultTemplateResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultTemplateResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResultTemplate request with invalid observationType parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultTemplateResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('observationType')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResultTemplate request with invalid observationType parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "observationType".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1108 Send valid InsertResultTemplate request, the response must be a valid InsertResultTemplateResponse. -->
   <ctl:test name="sos:IRTRequestValidRequest_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultTemplateRootElementName" />
      <ctl:param name="InsertResultTemplateResponseSchemaLocation" />
      <ctl:param name="InsertResultTemplateResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="test12" />
      <ctl:param name="InsertResult-URL" />
      <ctl:param name="hasInsertResult" />
      <ctl:param name="InsertResultRootElementName" />
      <ctl:param name="InsertResultResponseSchemaLocation" />
      <ctl:param name="InsertResultResponseSchemaType" />
      <ctl:param name="InsertResultResponseContentType" />
      <ctl:param name="test1201" />
      <ctl:param name="test1202" />
      <ctl:param name="test1203" />
      <ctl:param name="test1204" />
      <ctl:param name="test1205" />
      <ctl:param name="test1206" />
      <ctl:param name="test1207" />
      <ctl:param name="test1208" />
      <ctl:param name="test1209" />
      <ctl:param name="test1210" />
      <ctl:param name="test1211" />
      <ctl:assertion>Send a valid request ,and there must be have a valid InsertResultTemplateResponse returned.</ctl:assertion>
      <ctl:comment>Pass if the response is a valid InsertResultTemplateResponse and has an observation element in the response; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="InsertResultTemplateResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResultTemplate service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <swes:identifier>
                                    <xsl:value-of select="$procedure" />
                                    /template/
                                    <xsl:value-of select="current-dateTime()" />
                                 </swes:identifier>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <ctl:call-function name="sosFunctions:getOMObservationTemplate">
                                       <ctl:with-param name="procedure" select="$procedure" />
                                       <ctl:with-param name="observableProperty" select="$observableProperty" />
                                       <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                                    </ctl:call-function>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                     <parsers:SOAPParser return="content">
                        <parsers:XMLValidatingParser>
                           <parsers:schemas>
                              <parsers:schema>
                                 <xsl:attribute name="type">
                                    <xsl:value-of select="$InsertResultTemplateResponseSchemaType" />
                                 </xsl:attribute>
                                 <xsl:value-of select="$InsertResultTemplateResponseSchemaLocation" />
                              </parsers:schema>
                           </parsers:schemas>
                        </parsers:XMLValidatingParser>
                     </parsers:SOAPParser>
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResultTemplate service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <swes:identifier>
                                    <xsl:value-of select="$procedure" />
                                    /template/
                                    <xsl:value-of select="current-dateTime()" />
                                 </swes:identifier>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <ctl:call-function name="sosFunctions:getOMObservationTemplate">
                                       <ctl:with-param name="procedure" select="$procedure" />
                                       <ctl:with-param name="observableProperty" select="$observableProperty" />
                                       <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                                    </ctl:call-function>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                     <parsers:XMLValidatingParser>
                        <parsers:schemas>
                           <parsers:schema type="resource">xsd/w3c/xml.xsd</parsers:schema>
                           <parsers:schema>
                              <xsl:attribute name="type">
                                 <xsl:value-of select="$InsertResultTemplateResponseSchemaType" />
                              </xsl:attribute>
                              <xsl:value-of select="$InsertResultTemplateResponseSchemaLocation" />
                           </parsers:schema>
                        </parsers:schemas>
                     </parsers:XMLValidatingParser>
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultTemplateResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResultTemplate response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultTemplateResponse/*">
                  <xsl:variable name="responseRoot" select="local-name-from-QName(node-name($InsertResultTemplateResponse/*[1]))" />
                  <xsl:variable name="responseRoot2" select="local-name-from-QName(node-name($InsertResultTemplateResponse/soap12:Envelope/soap12:Body/*[1]))" />
                  <xsl:if test="not($responseRoot=$InsertResultTemplateRootElementName) and not($responseRoot2=$InsertResultTemplateRootElementName)">
                     <ctl:message>
                        FAILURE:  The root element from the response to a InsertResultTemplate request "
                        <xsl:value-of select="$responseRoot" />
                        " does not match the expected root element of "
                        <xsl:value-of select="$InsertResultTemplateRootElementName" />
                        "
                     </ctl:message>
                     <ctl:fail />
                  </xsl:if>
                  <!-- 1.response has one and only one observation -->
                  <xsl:variable name="acceptedTemplateCount" select="count($InsertResultTemplateResponse//sos:acceptedTemplate)" />
                  <xsl:if test="not($acceptedTemplateCount=1)">
                     <ctl:message>
                        FAILURE:  The count of sos:acceptedTemplate "
                        <xsl:value-of select="$acceptedTemplateCount" />
                        " must be 1.
                     </ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
               <xsl:if test="$test12">
                  <!-- if need to execute test12,get template from InsertResultTemplateResponse -->
                  <ctl:message>****************************</ctl:message>
                  <ctl:message>Running 12.SOS resultHandling: InsertResult Tests...</ctl:message>
                  <ctl:message>****************************</ctl:message>
                  <xsl:variable name="template" select="$InsertResultTemplateResponse//sos:InsertResultTemplateResponse/sos:acceptedTemplate" />
                  <ctl:message>
                     The value of template is : "
                     <xsl:value-of select="$template" />
                     ".
                  </ctl:message>
                  <ctl:call-test name="sos:InsertResult-Test">
                     <ctl:with-param name="serviceURL" select="$InsertResult-URL" />
                     <ctl:with-param name="hasIR" select="$hasInsertResult" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="serviceType" select="string('SOS')" />
                     <ctl:with-param name="serviceVersion" select="'2.0.0'" />
                     <ctl:with-param name="InsertResultRootElementName" select="string('InsertResultResponse')" />
                     <ctl:with-param name="InsertResultResponseSchemaLocation" select="sosFunctions:schemaPath('xsd/ogc/', '2.0.0','sos', 'sosInsertResult.xsd')" />
                     <ctl:with-param name="InsertResultResponseSchemaType" select="string('resource')" />
                     <ctl:with-param name="InsertResultResponseContentType" select="$InsertResultResponseContentType" />
                     <ctl:with-param name="test1201" select="$test1201" />
                     <ctl:with-param name="test1202" select="$test1202" />
                     <ctl:with-param name="test1203" select="$test1203" />
                     <ctl:with-param name="test1204" select="$test1204" />
                     <ctl:with-param name="test1205" select="$test1205" />
                     <ctl:with-param name="test1206" select="$test1206" />
                     <ctl:with-param name="test1207" select="$test1207" />
                     <ctl:with-param name="test1208" select="$test1208" />
                     <ctl:with-param name="test1209" select="$test1209" />
                     <ctl:with-param name="test1210" select="$test1210" />
                     <ctl:with-param name="test1211" select="$test1211" />
                     <ctl:with-param name="template" select="$template" />
                  </ctl:call-test>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1109 Send InsertResultTemplate request with same procedure, observedProperty and ObservationOffering but different resultStructure, ,the response must be a valid exception with code "InvalidParameterValue" and locator "proposedTemplate".. -->
   <ctl:test name="sos:IRTRequestInvalidproposedTemplate_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultTemplateRootElementName" />
      <ctl:param name="InsertResultTemplateResponseSchemaLocation" />
      <ctl:param name="InsertResultTemplateResponseSchemaType" />
      <ctl:param name="offering" />
      <ctl:param name="observationType" />
      <ctl:param name="procedure" />
      <ctl:param name="observableProperty" />
      <ctl:param name="featureOfInterest" />
      <ctl:assertion>Send a request with same "procedure", "observedProperty" and "ObservationOffering" but different "resultStructure",and the response must be a valid exception with code "InvalidParameterValue" and locator "proposedTemplate".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "proposedTemplate"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="InsertResultTemplateResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResultTemplate service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <ctl:call-function name="sosFunctions:getOMObservationTemplate">
                                       <ctl:with-param name="procedure" select="$procedure" />
                                       <ctl:with-param name="observableProperty" select="$observableProperty" />
                                       <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                                    </ctl:call-function>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResultTemplate service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:proposedTemplate>
                              <sos:ResultTemplate>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observationTemplate>
                                    <ctl:call-function name="sosFunctions:getOMObservationTemplate">
                                       <ctl:with-param name="procedure" select="$procedure" />
                                       <ctl:with-param name="observableProperty" select="$observableProperty" />
                                       <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                                    </ctl:call-function>
                                 </sos:observationTemplate>
                                 <sos:resultStructure>
                                    <swe:DataRecord>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'waterlevel'" />
                                          </xsl:attribute>
                                          <swe:Quantity>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://sweet.jpl.nasa.gov/2.0/hydroSurface.owl#WaterHeight'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'cm'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Quantity>
                                       </swe:field>
                                       <swe:field>
                                          <xsl:attribute name="name">
                                             <xsl:value-of select="'phenomenonTime'" />
                                          </xsl:attribute>
                                          <swe:Time>
                                             <xsl:attribute name="definition">
                                                <xsl:value-of select="'http://www.opengis.net/def/property/OGC/0/PhenomenonTime'" />
                                             </xsl:attribute>
                                             <swe:uom>
                                                <xsl:attribute name="code">
                                                   <xsl:value-of select="'ms'" />
                                                </xsl:attribute>
                                             </swe:uom>
                                          </swe:Time>
                                       </swe:field>
                                    </swe:DataRecord>
                                 </sos:resultStructure>
                                 <sos:resultEncoding>
                                    <swe:TextEncoding>
                                       <xsl:attribute name="tokenSeparator">
                                          <xsl:value-of select="','" />
                                       </xsl:attribute>
                                       <xsl:attribute name="blockSeparator">
                                          <xsl:value-of select="'@@'" />
                                       </xsl:attribute>
                                    </swe:TextEncoding>
                                 </sos:resultEncoding>
                              </sos:ResultTemplate>
                           </sos:proposedTemplate>
                        </sos:InsertResultTemplate>
                     </ctl:body>
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultTemplateResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResultTemplate response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultTemplateResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultTemplateResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultTemplateResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResultTemplate request with invalid proposedTemplate parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultTemplateResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('proposedTemplate')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResultTemplate request with invalid resultType parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "proposedTemplate".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
</ctl:package>