<ctl:package xmlns:ctl="http://www.occamlab.com/ctl" xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:om="http://www.opengis.net/om/2.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:owsTests="http://www.opengis.net/ows/1.1" xmlns:parsers="http://www.occamlab.com/te/parsers" xmlns:sml="http://www.opengis.net/sensorML/1.0.1" xmlns:soap11="http://schemas.xmlsoap.org/soap/" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope" xmlns:sos="http://www.opengis.net/sos/2.0" xmlns:sosFunctions="http://www.opengis.net/sos/2.0" xmlns:swe="http://www.opengis.net/swe/2.0" xmlns:swes="http://www.opengis.net/swes/2.0" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<!-- 06.SOS enhancedOperations: GetFeatureOfInterest -->
   <ctl:test name="sos:GetFeatureOfInterest-Test" isConformanceClass="true">
      <ctl:param name="GetObservationURL" />
      <ctl:param name="isGetObservationGET" />
      <ctl:param name="observationResponseSchemaType" />
      <ctl:param name="observationResponseSchemaLocation" />
      <ctl:param name="serviceURL" />
      <ctl:param name="hasFOI" />
      <ctl:param name="isGET" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="serviceType" />
      <ctl:param name="serviceVersion" />
      <ctl:param name="featureOfInterestRootElementName" />
      <ctl:param name="featureOfInterestResponseSchemaLocation" />
      <ctl:param name="featureOfInterestResponseSchemaType" />
      <ctl:param name="featureOfInterestResponseContentType" />
      <ctl:param name="exceptionReportSchemaLocation" />
      <ctl:param name="exceptionReportSchemaType" />
      <ctl:param name="test0601" />
      <ctl:param name="test0602" />
      <ctl:param name="test0603" />
      <ctl:param name="test0604" />
      <ctl:param name="test0605" />
      <ctl:param name="test0606" />
      <ctl:param name="test0607" />
      <ctl:param name="test0608" />
      <ctl:param name="test0609" />
      <ctl:param name="test0610" />
      <ctl:param name="test0611" />
      <ctl:param name="test0612" />
      <ctl:param name="test0613" />
      <ctl:param name="test0614" />
      <ctl:param name="test0615" />
      <ctl:assertion>Execute GetFeatureOfInterest Test.</ctl:assertion>
      <ctl:comment>Pass if all the subtest not fail; fail otherwise.</ctl:comment>
      <ctl:code>
         <xsl:choose>
            <xsl:when test="$hasFOI eq 'false'">
               <ctl:message>The server does not support the operation "GetFeatureOfInterest", so skip this test.</ctl:message>
            </xsl:when>
            <xsl:otherwise>
               <!-- get a valid offering-->
               <xsl:variable name="offering" select="$getCapabilitiesResponse//sos:contents//swes:offering[1]//swes:identifier" />
               <ctl:message>
                  The offering was:
                  <xsl:value-of select="$offering" />
               </ctl:message>
               <!-- get a valid procedure-->
               <xsl:variable name="procedure" select="$getCapabilitiesResponse//sos:contents//swes:offering[1]//swes:procedure[1]" />
               <ctl:message>
                  The procedure was:
                  <xsl:value-of select="$procedure" />
               </ctl:message>
               <!-- get a valid observableProperty-->
               <xsl:variable name="observableProperty" select="$getCapabilitiesResponse//sos:contents//swes:offering[1]//swes:observableProperty[1]" />
               <ctl:message>
                  The observableProperty was:
                  <xsl:value-of select="$observableProperty" />
               </ctl:message>
               <!-- get a valid featureOfInterest From GetObservation-->
               <xsl:variable name="getObservationResponse">
                  <xsl:choose>
                     <xsl:when test="($isGetObservationGET)">
                        <ctl:request>
                           <ctl:url>
                              <xsl:value-of select="$GetObservationURL" />
                           </ctl:url>
                           <ctl:method>get</ctl:method>
                           <ctl:param name="service">SOS</ctl:param>
                           <ctl:param name="version">2.0.0</ctl:param>
                           <ctl:param name="request">GetObservation</ctl:param>
                           <ctl:param name="procedure">
                              <xsl:value-of select="$procedure" />
                           </ctl:param>
                           <ctl:param name="offering">
                              <xsl:value-of select="$offering" />
                           </ctl:param>
                           <ctl:param name="observedProperty">
                              <xsl:value-of select="$observableProperty" />
                           </ctl:param>
                           <parsers:XMLValidatingParser>
                              <parsers:schemas>
                                 <parsers:schema type="url">http://schemas.opengis.net/samplingSpatial/2.0/spatialSamplingFeature.xsd</parsers:schema>
                                 <parsers:schema>
                                    <xsl:attribute name="type">
                                       <xsl:value-of select="$observationResponseSchemaType" />
                                    </xsl:attribute>
                                    <xsl:value-of select="$observationResponseSchemaLocation" />
                                 </parsers:schema>
                              </parsers:schemas>
                           </parsers:XMLValidatingParser>
                        </ctl:request>
                     </xsl:when>
                     <xsl:when test="$isSOAP eq 'true'">
                        <ctl:soap-request version="1.2" charset="UTF-8">
                           <ctl:url>
                              <xsl:value-of select="$GetObservationURL" />
                           </ctl:url>
                           <ctl:body>
                              <sos:GetObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd              http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                                 <sos:procedure>
                                    <xsl:value-of select="$procedure" />
                                 </sos:procedure>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observedProperty>
                                    <xsl:value-of select="$observableProperty" />
                                 </sos:observedProperty>
                              </sos:GetObservation>
                           </ctl:body>
                           <parsers:SOAPParser return="content">
                              <parsers:XMLValidatingParser>
                                 <parsers:schemas>
                                    <parsers:schema>
                                       <parsers:schema type="url">http://schemas.opengis.net/samplingSpatial/2.0/spatialSamplingFeature.xsd</parsers:schema>
                                       <xsl:attribute name="type">
                                          <xsl:value-of select="$observationResponseSchemaType" />
                                       </xsl:attribute>
                                       <xsl:value-of select="$observationResponseSchemaLocation" />
                                    </parsers:schema>
                                 </parsers:schemas>
                              </parsers:XMLValidatingParser>
                           </parsers:SOAPParser>
                        </ctl:soap-request>
                     </xsl:when>
                     <xsl:otherwise>
                        <ctl:request>
                           <ctl:url>
                              <xsl:value-of select="$GetObservationURL" />
                           </ctl:url>
                           <ctl:method>post</ctl:method>
                           <ctl:body>
                              <sos:GetObservation service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd              http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                                 <sos:procedure>
                                    <xsl:value-of select="$procedure" />
                                 </sos:procedure>
                                 <sos:offering>
                                    <xsl:value-of select="$offering" />
                                 </sos:offering>
                                 <sos:observedProperty>
                                    <xsl:value-of select="$observableProperty" />
                                 </sos:observedProperty>
                              </sos:GetObservation>
                           </ctl:body>
                           <parsers:XMLValidatingParser>
                              <parsers:schemas>
                                 <parsers:schema type="url">http://schemas.opengis.net/samplingSpatial/2.0/spatialSamplingFeature.xsd</parsers:schema>
                                 <parsers:schema>
                                    <xsl:attribute name="type">
                                       <xsl:value-of select="$observationResponseSchemaType" />
                                    </xsl:attribute>
                                    <xsl:value-of select="$observationResponseSchemaLocation" />
                                 </parsers:schema>
                              </parsers:schemas>
                           </parsers:XMLValidatingParser>
                        </ctl:request>
                     </xsl:otherwise>
                  </xsl:choose>
               </xsl:variable>
               <xsl:variable name="featureOfInterest" select="$getObservationResponse//om:featureOfInterest[1]/@href" />
               <!-- Get a getFeatureOfInterestResponse -->
               <xsl:variable name="getFeatureOfInterestResponse">
                  <xsl:choose>
                     <xsl:when test="$isGET eq 'true'">
                        <ctl:request>
                           <ctl:url>
                              <xsl:value-of select="$serviceURL" />
                           </ctl:url>
                           <ctl:method>get</ctl:method>
                           <ctl:param name="service">SOS</ctl:param>
                           <ctl:param name="version">2.0.0</ctl:param>
                           <ctl:param name="request">GetFeatureOfInterest</ctl:param>
                           <parsers:XMLValidatingParser>
                              <parsers:schemas>
                                 <parsers:schema type="url">http://schemas.opengis.net/samplingSpatial/2.0/spatialSamplingFeature.xsd</parsers:schema>
                                 <parsers:schema>
                                    <xsl:attribute name="type">
                                       <xsl:value-of select="$featureOfInterestResponseSchemaType" />
                                    </xsl:attribute>
                                    <xsl:value-of select="$featureOfInterestResponseSchemaLocation" />
                                 </parsers:schema>
                              </parsers:schemas>
                           </parsers:XMLValidatingParser>
                        </ctl:request>
                     </xsl:when>
                     <xsl:when test="$isSOAP eq 'true'">
                        <ctl:soap-request version="1.2" charset="UTF-8">
                           <ctl:url>
                              <xsl:value-of select="$serviceURL" />
                           </ctl:url>
                           <ctl:body>
                              <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd              http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd" />
                           </ctl:body>
                           <parsers:SOAPParser return="content">
                              <parsers:XMLValidatingParser>
                                 <parsers:schemas>
                                    <parsers:schema type="url">http://schemas.opengis.net/samplingSpatial/2.0/spatialSamplingFeature.xsd</parsers:schema>
                                    <parsers:schema>
                                       <xsl:attribute name="type">
                                          <xsl:value-of select="$featureOfInterestResponseSchemaType" />
                                       </xsl:attribute>
                                       <xsl:value-of select="$featureOfInterestResponseSchemaLocation" />
                                    </parsers:schema>
                                 </parsers:schemas>
                              </parsers:XMLValidatingParser>
                           </parsers:SOAPParser>
                        </ctl:soap-request>
                     </xsl:when>
                     <xsl:otherwise>
                        <ctl:request>
                           <ctl:url>
                              <xsl:value-of select="$serviceURL" />
                           </ctl:url>
                           <ctl:method>post</ctl:method>
                           <ctl:body>
                              <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd              http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd" />
                           </ctl:body>
                           <parsers:XMLValidatingParser>
                              <parsers:schemas>
                                 <parsers:schema type="url">http://schemas.opengis.net/samplingSpatial/2.0/spatialSamplingFeature.xsd</parsers:schema>
                                 <parsers:schema>
                                    <xsl:attribute name="type">
                                       <xsl:value-of select="$featureOfInterestResponseSchemaType" />
                                    </xsl:attribute>
                                    <xsl:value-of select="$featureOfInterestResponseSchemaLocation" />
                                 </parsers:schema>
                              </parsers:schemas>
                           </parsers:XMLValidatingParser>
                        </ctl:request>
                     </xsl:otherwise>
                  </xsl:choose>
               </xsl:variable>
               <xsl:choose>
                  <xsl:when test="not($getFeatureOfInterestResponse/*)">
                     <ctl:message>FAILURE: Missing or invalid response entity.</ctl:message>
                     <ctl:fail />
                  </xsl:when>
                  <xsl:otherwise>
                     <xsl:if test="$test0601 eq 'true'">
                        <ctl:message select="'******************** 06.01.RequestNoService ********************'" />
                        <ctl:call-test name="sos:GFOIRequestNoService_foiRetrieval">
                           <ctl:with-param name="serviceURL" select="$serviceURL" />
                           <ctl:with-param name="isGET" select="$isGET" />
                           <ctl:with-param name="isSOAP" select="$isSOAP" />
                           <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                           <ctl:with-param name="featureOfInterestRootElementName" select="$featureOfInterestRootElementName" />
                           <ctl:with-param name="featureOfInterestResponseSchemaLocation" select="$featureOfInterestResponseSchemaLocation" />
                           <ctl:with-param name="featureOfInterestResponseSchemaType" select="$featureOfInterestResponseSchemaType" />
                           <ctl:with-param name="procedure" select="$procedure" />
                           <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                           <ctl:with-param name="observableProperty" select="$observableProperty" />
                        </ctl:call-test>
                     </xsl:if>
                     <xsl:if test="$test0602 eq 'true'">
                        <ctl:message select="'******************** 06.02.RequestNullService ********************'" />
                        <ctl:call-test name="sos:GFOIRequestNullService_foiRetrieval">
                           <ctl:with-param name="serviceURL" select="$serviceURL" />
                           <ctl:with-param name="isGET" select="$isGET" />
                           <ctl:with-param name="isSOAP" select="$isSOAP" />
                           <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                           <ctl:with-param name="featureOfInterestRootElementName" select="$featureOfInterestRootElementName" />
                           <ctl:with-param name="featureOfInterestResponseSchemaLocation" select="$featureOfInterestResponseSchemaLocation" />
                           <ctl:with-param name="featureOfInterestResponseSchemaType" select="$featureOfInterestResponseSchemaType" />
                           <ctl:with-param name="procedure" select="$procedure" />
                           <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                           <ctl:with-param name="observableProperty" select="$observableProperty" />
                        </ctl:call-test>
                     </xsl:if>
                     <xsl:if test="$test0603 eq 'true'">
                        <ctl:message select="'******************** 06.03.RequestInvalidService ********************'" />
                        <ctl:call-test name="sos:GFOIRequestInvalidService_foiRetrieval">
                           <ctl:with-param name="serviceURL" select="$serviceURL" />
                           <ctl:with-param name="isGET" select="$isGET" />
                           <ctl:with-param name="isSOAP" select="$isSOAP" />
                           <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                           <ctl:with-param name="featureOfInterestRootElementName" select="$featureOfInterestRootElementName" />
                           <ctl:with-param name="featureOfInterestResponseSchemaLocation" select="$featureOfInterestResponseSchemaLocation" />
                           <ctl:with-param name="featureOfInterestResponseSchemaType" select="$featureOfInterestResponseSchemaType" />
                           <ctl:with-param name="procedure" select="$procedure" />
                           <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                           <ctl:with-param name="observableProperty" select="$observableProperty" />
                        </ctl:call-test>
                     </xsl:if>
                     <xsl:if test="$test0604 eq 'true'">
                        <ctl:message select="'******************** 06.04.RequestNoVersion ********************'" />
                        <ctl:call-test name="sos:GFOIRequestNoVersion_foiRetrieval">
                           <ctl:with-param name="serviceURL" select="$serviceURL" />
                           <ctl:with-param name="isGET" select="$isGET" />
                           <ctl:with-param name="isSOAP" select="$isSOAP" />
                           <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                           <ctl:with-param name="featureOfInterestRootElementName" select="$featureOfInterestRootElementName" />
                           <ctl:with-param name="featureOfInterestResponseSchemaLocation" select="$featureOfInterestResponseSchemaLocation" />
                           <ctl:with-param name="featureOfInterestResponseSchemaType" select="$featureOfInterestResponseSchemaType" />
                           <ctl:with-param name="procedure" select="$procedure" />
                           <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                           <ctl:with-param name="observableProperty" select="$observableProperty" />
                        </ctl:call-test>
                     </xsl:if>
                     <xsl:if test="$test0605 eq 'true'">
                        <ctl:message select="'******************** 06.05.RequestNullVersion ********************'" />
                        <ctl:call-test name="sos:GFOIRequestNullVersion_foiRetrieval">
                           <ctl:with-param name="serviceURL" select="$serviceURL" />
                           <ctl:with-param name="isGET" select="$isGET" />
                           <ctl:with-param name="isSOAP" select="$isSOAP" />
                           <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                           <ctl:with-param name="featureOfInterestRootElementName" select="$featureOfInterestRootElementName" />
                           <ctl:with-param name="featureOfInterestResponseSchemaLocation" select="$featureOfInterestResponseSchemaLocation" />
                           <ctl:with-param name="featureOfInterestResponseSchemaType" select="$featureOfInterestResponseSchemaType" />
                           <ctl:with-param name="procedure" select="$procedure" />
                           <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                           <ctl:with-param name="observableProperty" select="$observableProperty" />
                        </ctl:call-test>
                     </xsl:if>
                     <xsl:if test="$test0606 eq 'true'">
                        <ctl:message select="'******************** 06.06.RequestInvalidVersion ********************'" />
                        <ctl:call-test name="sos:GFOIRequestInvalidVersion_foiRetrieval">
                           <ctl:with-param name="serviceURL" select="$serviceURL" />
                           <ctl:with-param name="isGET" select="$isGET" />
                           <ctl:with-param name="isSOAP" select="$isSOAP" />
                           <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                           <ctl:with-param name="featureOfInterestRootElementName" select="$featureOfInterestRootElementName" />
                           <ctl:with-param name="featureOfInterestResponseSchemaLocation" select="$featureOfInterestResponseSchemaLocation" />
                           <ctl:with-param name="featureOfInterestResponseSchemaType" select="$featureOfInterestResponseSchemaType" />
                           <ctl:with-param name="procedure" select="$procedure" />
                           <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                           <ctl:with-param name="observableProperty" select="$observableProperty" />
                        </ctl:call-test>
                     </xsl:if>
                     <xsl:if test="$test0607 eq 'true'">
                        <ctl:message select="'******************** 06.07.RequestNullProcedure ********************'" />
                        <ctl:call-test name="sos:GFOIRequestNullProcedure_foiRetrieval">
                           <ctl:with-param name="serviceURL" select="$serviceURL" />
                           <ctl:with-param name="isGET" select="$isGET" />
                           <ctl:with-param name="isSOAP" select="$isSOAP" />
                           <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                           <ctl:with-param name="featureOfInterestRootElementName" select="$featureOfInterestRootElementName" />
                           <ctl:with-param name="featureOfInterestResponseSchemaLocation" select="$featureOfInterestResponseSchemaLocation" />
                           <ctl:with-param name="featureOfInterestResponseSchemaType" select="$featureOfInterestResponseSchemaType" />
                           <ctl:with-param name="procedure" select="$procedure" />
                           <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                           <ctl:with-param name="observableProperty" select="$observableProperty" />
                        </ctl:call-test>
                     </xsl:if>
                     <xsl:if test="$test0608 eq 'true'">
                        <ctl:message select="'******************** 06.08.RequestInvalidProcedure ********************'" />
                        <ctl:call-test name="sos:GFOIRequestInvalidProcedure_foiRetrieval">
                           <ctl:with-param name="serviceURL" select="$serviceURL" />
                           <ctl:with-param name="isGET" select="$isGET" />
                           <ctl:with-param name="isSOAP" select="$isSOAP" />
                           <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                           <ctl:with-param name="featureOfInterestRootElementName" select="$featureOfInterestRootElementName" />
                           <ctl:with-param name="featureOfInterestResponseSchemaLocation" select="$featureOfInterestResponseSchemaLocation" />
                           <ctl:with-param name="featureOfInterestResponseSchemaType" select="$featureOfInterestResponseSchemaType" />
                           <ctl:with-param name="procedure" select="$procedure" />
                           <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                           <ctl:with-param name="observableProperty" select="$observableProperty" />
                        </ctl:call-test>
                     </xsl:if>
                     <xsl:if test="$test0609 eq 'true'">
                        <ctl:message select="'******************** 06.09.RequestNullObservedProperty ********************'" />
                        <ctl:call-test name="sos:GFOIRequestNullObservedProperty_foiRetrieval">
                           <ctl:with-param name="serviceURL" select="$serviceURL" />
                           <ctl:with-param name="isGET" select="$isGET" />
                           <ctl:with-param name="isSOAP" select="$isSOAP" />
                           <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                           <ctl:with-param name="featureOfInterestRootElementName" select="$featureOfInterestRootElementName" />
                           <ctl:with-param name="featureOfInterestResponseSchemaLocation" select="$featureOfInterestResponseSchemaLocation" />
                           <ctl:with-param name="featureOfInterestResponseSchemaType" select="$featureOfInterestResponseSchemaType" />
                           <ctl:with-param name="procedure" select="$procedure" />
                           <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                           <ctl:with-param name="observableProperty" select="$observableProperty" />
                        </ctl:call-test>
                     </xsl:if>
                     <xsl:if test="$test0610 eq 'true'">
                        <ctl:message select="'******************** 06.10.RequestInvalidObservedProperty ********************'" />
                        <ctl:call-test name="sos:GFOIRequestInvalidObservedProperty_foiRetrieval">
                           <ctl:with-param name="serviceURL" select="$serviceURL" />
                           <ctl:with-param name="isGET" select="$isGET" />
                           <ctl:with-param name="isSOAP" select="$isSOAP" />
                           <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                           <ctl:with-param name="featureOfInterestRootElementName" select="$featureOfInterestRootElementName" />
                           <ctl:with-param name="featureOfInterestResponseSchemaLocation" select="$featureOfInterestResponseSchemaLocation" />
                           <ctl:with-param name="featureOfInterestResponseSchemaType" select="$featureOfInterestResponseSchemaType" />
                           <ctl:with-param name="procedure" select="$procedure" />
                           <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                           <ctl:with-param name="observableProperty" select="$observableProperty" />
                        </ctl:call-test>
                     </xsl:if>
                     <xsl:if test="$test0611 eq 'true'">
                        <ctl:message select="'******************** 06.11.RequestNullfeatureOfInterest ********************'" />
                        <ctl:call-test name="sos:GFOIRequestNullfeatureOfInterest_foiRetrieval">
                           <ctl:with-param name="serviceURL" select="$serviceURL" />
                           <ctl:with-param name="isGET" select="$isGET" />
                           <ctl:with-param name="isSOAP" select="$isSOAP" />
                           <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                           <ctl:with-param name="featureOfInterestRootElementName" select="$featureOfInterestRootElementName" />
                           <ctl:with-param name="featureOfInterestResponseSchemaLocation" select="$featureOfInterestResponseSchemaLocation" />
                           <ctl:with-param name="featureOfInterestResponseSchemaType" select="$featureOfInterestResponseSchemaType" />
                           <ctl:with-param name="procedure" select="$procedure" />
                           <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                           <ctl:with-param name="observableProperty" select="$observableProperty" />
                        </ctl:call-test>
                     </xsl:if>
                     <xsl:if test="$test0612 eq 'true'">
                        <ctl:message select="'******************** 06.12.RequestInvalidfeatureOfInterest ********************'" />
                        <ctl:call-test name="sos:GFOIRequestInvalidfeatureOfInterest_foiRetrieval">
                           <ctl:with-param name="serviceURL" select="$serviceURL" />
                           <ctl:with-param name="isGET" select="$isGET" />
                           <ctl:with-param name="isSOAP" select="$isSOAP" />
                           <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                           <ctl:with-param name="featureOfInterestRootElementName" select="$featureOfInterestRootElementName" />
                           <ctl:with-param name="featureOfInterestResponseSchemaLocation" select="$featureOfInterestResponseSchemaLocation" />
                           <ctl:with-param name="featureOfInterestResponseSchemaType" select="$featureOfInterestResponseSchemaType" />
                           <ctl:with-param name="procedure" select="$procedure" />
                           <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                           <ctl:with-param name="observableProperty" select="$observableProperty" />
                        </ctl:call-test>
                     </xsl:if>
                     <xsl:if test="$test0613 eq 'true'">
                        <ctl:message select="'******************** 06.13.RequestNULLSpatialFilter ********************'" />
                        <ctl:call-test name="sos:GFOIRequestNULLSpatialFilter_foiRetrieval">
                           <ctl:with-param name="serviceURL" select="$serviceURL" />
                           <ctl:with-param name="isGET" select="$isGET" />
                           <ctl:with-param name="isSOAP" select="$isSOAP" />
                           <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                           <ctl:with-param name="featureOfInterestRootElementName" select="$featureOfInterestRootElementName" />
                           <ctl:with-param name="featureOfInterestResponseSchemaLocation" select="$featureOfInterestResponseSchemaLocation" />
                           <ctl:with-param name="featureOfInterestResponseSchemaType" select="$featureOfInterestResponseSchemaType" />
                           <ctl:with-param name="procedure" select="$procedure" />
                           <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                           <ctl:with-param name="observableProperty" select="$observableProperty" />
                        </ctl:call-test>
                     </xsl:if>
                     <xsl:if test="$test0614 eq 'true'">
                        <ctl:message select="'******************** 06.14.RequestInvalidSpatialFilter ********************'" />
                        <ctl:call-test name="sos:GFOIRequestInvalidSpatialFilter_foiRetrieval">
                           <ctl:with-param name="serviceURL" select="$serviceURL" />
                           <ctl:with-param name="isGET" select="$isGET" />
                           <ctl:with-param name="isSOAP" select="$isSOAP" />
                           <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                           <ctl:with-param name="featureOfInterestRootElementName" select="$featureOfInterestRootElementName" />
                           <ctl:with-param name="featureOfInterestResponseSchemaLocation" select="$featureOfInterestResponseSchemaLocation" />
                           <ctl:with-param name="featureOfInterestResponseSchemaType" select="$featureOfInterestResponseSchemaType" />
                           <ctl:with-param name="procedure" select="$procedure" />
                           <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                           <ctl:with-param name="observableProperty" select="$observableProperty" />
                        </ctl:call-test>
                     </xsl:if>
                     <xsl:if test="$test0615 eq 'true'">
                        <ctl:message select="'******************** 06.15.RequestEmptyResponse ********************'" />
                        <ctl:call-test name="sos:GFOIRequestEmptyResponse_foiRetrieval">
                           <ctl:with-param name="serviceURL" select="$serviceURL" />
                           <ctl:with-param name="isGET" select="$isGET" />
                           <ctl:with-param name="isSOAP" select="$isSOAP" />
                           <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                           <ctl:with-param name="featureOfInterestRootElementName" select="$featureOfInterestRootElementName" />
                           <ctl:with-param name="featureOfInterestResponseSchemaLocation" select="$featureOfInterestResponseSchemaLocation" />
                           <ctl:with-param name="featureOfInterestResponseSchemaType" select="$featureOfInterestResponseSchemaType" />
                           <ctl:with-param name="procedure" select="$procedure" />
                           <ctl:with-param name="featureOfInterest" select="$featureOfInterest" />
                           <ctl:with-param name="observableProperty" select="$observableProperty" />
                        </ctl:call-test>
                     </xsl:if>
                  </xsl:otherwise>
               </xsl:choose>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 0601 Send GetFeatureOfInterest request without parameter service by KVP,the response must be a valid exception with code "MissingParameterValue" and locator "service".. -->
   <!-- 0601 Send GetFeatureOfInterest request without parameter service by POST or SOAP,the response must be a valid exception with code "InvalidRequest" and locator "Expected attribute: service in element GetFeatureOfInterest@http://www.opengis.net/sos/2.0".. -->
   <ctl:test name="sos:GFOIRequestNoService_foiRetrieval">
      <ctl:param name="GetObservationURL" />
      <ctl:param name="isGetObservationGET" />
      <ctl:param name="observationResponseSchemaType" />
      <ctl:param name="observationResponseSchemaLocation" />
      <ctl:param name="serviceURL" />
      <ctl:param name="isGET" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="featureOfInterestRootElementName" />
      <ctl:param name="featureOfInterestResponseSchemaLocation" />
      <ctl:param name="featureOfInterestResponseSchemaType" />
      <ctl:param name="procedure" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observableProperty" />
      <ctl:assertion>Send a request without parameter "service" by KVP,and the response must be a valid exception with code "MissingParameterValue" and locator "service". 
			Send a request without parameter "service" by POST or SOAP,and the response must be a valid exception with code "InvalidRequest" and locator "Expected attribute: service in element GetFeatureOfInterest@http://www.opengis.net/sos/2.0".</ctl:assertion>
      <ctl:comment>Pass if the server (KVP) returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "service"; fail otherwise.
			Pass if the server (POST or SOAP) returns a valid exception message with an exceptionCode "InvalidRequest" and locator is "Expected attribute: service in element GetFeatureOfInterest@http://www.opengis.net/sos/2.0"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="getFeatureOfInterestResponse">
            <xsl:choose>
               <xsl:when test="$isGET eq 'true'">
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>get</ctl:method>
                     <ctl:param name="version">2.0.0</ctl:param>
                     <ctl:param name="request">GetFeatureOfInterest</ctl:param>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:when>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:GetFeatureOfInterest version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd" />
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:GetFeatureOfInterest version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd" />
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($getFeatureOfInterestResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the GetFeatureOfInterest response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$getFeatureOfInterestResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a GetFeatureOfInterest request with no service parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <xsl:choose>
                        <xsl:when test="$isGET eq 'true'">
                           <ctl:call-function name="sosFunctions:checkExceptionReport">
                              <ctl:with-param name="exceptionReport" select="$getFeatureOfInterestResponse" />
                              <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                              <ctl:with-param name="locatorToCheck" select="string('service')" />
                              <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                           </ctl:call-function>
                        </xsl:when>
                        <xsl:otherwise>
                           <ctl:call-function name="sosFunctions:checkExceptionReport">
                              <ctl:with-param name="exceptionReport" select="$getFeatureOfInterestResponse" />
                              <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidRequest')" />
                              <ctl:with-param name="locatorToCheck" select="string('Expected attribute: service in element GetFeatureOfInterest@http://www.opengis.net/sos/2.0')" />
                              <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                           </ctl:call-function>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <xsl:choose>
                        <xsl:when test="$isGET eq 'true'">
                           <ctl:message>FAILURE:  The server did not return the expected exception report response to a GetFeatureOfInterest request with no service parameter specified.</ctl:message>
                           <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "service".</ctl:message>
                           <ctl:fail />
                        </xsl:when>
                        <xsl:otherwise>
                           <ctl:message>FAILURE:  The server did not return the expected exception report response to a GetFeatureOfInterest request with no service parameter specified.</ctl:message>
                           <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidRequest" and a locator of "Expected attribute: service in element GetFeatureOfInterest@http://www.opengis.net/sos/2.0".</ctl:message>
                           <ctl:fail />
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 0602 Send GetFeatureOfInterest request with null parameter service ,the response must be a valid exception with code "MissingParameterValue" and locator "service".. -->
   <ctl:test name="sos:GFOIRequestNullService_foiRetrieval">
      <ctl:param name="serviceURL" />
      <ctl:param name="isGET" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="featureOfInterestRootElementName" />
      <ctl:param name="featureOfInterestResponseSchemaLocation" />
      <ctl:param name="featureOfInterestResponseSchemaType" />
      <ctl:param name="procedure" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observableProperty" />
      <ctl:assertion>Send a request with null parameter "service",and the response must be a valid exception with code "MissingParameterValue" and locator "service".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "service"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="getFeatureOfInterestResponse">
            <xsl:choose>
               <xsl:when test="$isGET eq 'true'">
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>get</ctl:method>
                     <ctl:param name="service" />
                     <ctl:param name="version">2.0.0</ctl:param>
                     <ctl:param name="request">GetFeatureOfInterest</ctl:param>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:when>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd" />
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd" />
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($getFeatureOfInterestResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the GetFeatureOfInterest response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$getFeatureOfInterestResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a GetFeatureOfInterest request with invalid service parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$getFeatureOfInterestResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('service')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a GetFeatureOfInterest request with null service parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "service".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 0603 Send GetFeatureOfInterest request with invalid parameter service ,the response must be a valid exception with code "InvalidParameterValue" and locator "service".. -->
   <ctl:test name="sos:GFOIRequestInvalidService_foiRetrieval">
      <ctl:param name="serviceURL" />
      <ctl:param name="isGET" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="featureOfInterestRootElementName" />
      <ctl:param name="featureOfInterestResponseSchemaLocation" />
      <ctl:param name="featureOfInterestResponseSchemaType" />
      <ctl:param name="procedure" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observableProperty" />
      <ctl:assertion>Send a request with invalid parameter "procedure",and the response must be a valid exception with code "InvalidParameterValue" and locator "service".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "service"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="getFeatureOfInterestResponse">
            <xsl:choose>
               <xsl:when test="$isGET eq 'true'">
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>get</ctl:method>
                     <ctl:param name="service">ASDF</ctl:param>
                     <ctl:param name="version">2.0.0</ctl:param>
                     <ctl:param name="request">GetFeatureOfInterest</ctl:param>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:when>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="ASDF" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd" />
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="ASDF" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd" />
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($getFeatureOfInterestResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the GetFeatureOfInterest response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$getFeatureOfInterestResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a GetFeatureOfInterest request with invalid service parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$getFeatureOfInterestResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('service')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a GetFeatureOfInterest request with invalid service parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "service".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 0604 Send GetFeatureOfInterest request without parameter version (KVP),the response must be a valid exception with code "MissingParameterValue" and locator "version".. -->
   <!-- 0604 Send GetFeatureOfInterest request without parameter version (POST or SOAP),the response must be a valid exception with code "InvalidRequest" and locator "Expected attribute: version in element GetFeatureOfInterest@http://www.opengis.net/sos/2.0".. -->
   <ctl:test name="sos:GFOIRequestNoVersion_foiRetrieval">
      <ctl:param name="serviceURL" />
      <ctl:param name="isGET" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="featureOfInterestRootElementName" />
      <ctl:param name="featureOfInterestResponseSchemaLocation" />
      <ctl:param name="featureOfInterestResponseSchemaType" />
      <ctl:param name="procedure" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observableProperty" />
      <ctl:assertion>Send a request (KVP) without parameter "version",and the response must be a valid exception with code "MissingParameterValue" and locator "version". 
			Send a request (POST or SOAP) without parameter "version",and the response must be a valid exception with code "InvalidRequest" and locator "Expected attribute: version in element GetFeatureOfInterest@http://www.opengis.net/sos/2.0".</ctl:assertion>
      <ctl:comment>Pass if the server (KVP) returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "version"; fail otherwise.
			Pass if the server (POST or SOAP) returns a valid exception message with an exceptionCode "InvalidRequest" and locator is "Expected attribute: version in element GetFeatureOfInterest@http://www.opengis.net/sos/2.0"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="getFeatureOfInterestResponse">
            <xsl:choose>
               <xsl:when test="$isGET eq 'true'">
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>get</ctl:method>
                     <ctl:param name="service">SOS</ctl:param>
                     <ctl:param name="request">GetFeatureOfInterest</ctl:param>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:when>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd" />
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd" />
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($getFeatureOfInterestResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the GetFeatureOfInterest response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$getFeatureOfInterestResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a GetFeatureOfInterest request with no version parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <xsl:choose>
                        <xsl:when test="$isGET eq 'true'">
                           <ctl:call-function name="sosFunctions:checkExceptionReport">
                              <ctl:with-param name="exceptionReport" select="$getFeatureOfInterestResponse" />
                              <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                              <ctl:with-param name="locatorToCheck" select="string('version')" />
                              <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                           </ctl:call-function>
                        </xsl:when>
                        <xsl:otherwise>
                           <ctl:call-function name="sosFunctions:checkExceptionReport">
                              <ctl:with-param name="exceptionReport" select="$getFeatureOfInterestResponse" />
                              <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidRequest')" />
                              <ctl:with-param name="locatorToCheck" select="string('Expected attribute: version in element GetFeatureOfInterest@http://www.opengis.net/sos/2.0')" />
                              <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                           </ctl:call-function>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <xsl:choose>
                        <xsl:when test="$isGET eq 'true'">
                           <ctl:message>FAILURE:  The server did not return the expected exception report response to a GetFeatureOfInterest request with no version parameter specified.</ctl:message>
                           <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "version".</ctl:message>
                           <ctl:fail />
                        </xsl:when>
                        <xsl:otherwise>
                           <ctl:message>FAILURE:  The server did not return the expected exception report response to a GetFeatureOfInterest request with no version parameter specified.</ctl:message>
                           <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidRequest" and a locator of "Expected attribute: version in element GetFeatureOfInterest@http://www.opengis.net/sos/2.0".</ctl:message>
                           <ctl:fail />
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:if>
                  <xsl:variable name="isCorrect" />
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))" />
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 0605 Send GetFeatureOfInterest request with null parameter version ,the response must be a valid exception with code "MissingParameterValue" and locator "version".. -->
   <ctl:test name="sos:GFOIRequestNullVersion_foiRetrieval">
      <ctl:param name="serviceURL" />
      <ctl:param name="isGET" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="featureOfInterestRootElementName" />
      <ctl:param name="featureOfInterestResponseSchemaLocation" />
      <ctl:param name="featureOfInterestResponseSchemaType" />
      <ctl:param name="procedure" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observableProperty" />
      <ctl:assertion>Send a request with null parameter "version",and the response must be a valid exception with code "MissingParameterValue" and locator "version".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "version"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="getFeatureOfInterestResponse">
            <xsl:choose>
               <xsl:when test="$isGET eq 'true'">
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>get</ctl:method>
                     <ctl:param name="service">SOS</ctl:param>
                     <ctl:param name="version" />
                     <ctl:param name="request">GetFeatureOfInterest</ctl:param>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:when>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd" />
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd" />
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($getFeatureOfInterestResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the GetFeatureOfInterest response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$getFeatureOfInterestResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a GetFeatureOfInterest request with invalid version parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$getFeatureOfInterestResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('version')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a GetFeatureOfInterest request with null version parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "version".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 0606 Send GetFeatureOfInterest request with invalid parameter version ,the response must be a valid exception with code "InvalidParameterValue" and locator "version".. -->
   <ctl:test name="sos:GFOIRequestInvalidVersion_foiRetrieval">
      <ctl:param name="serviceURL" />
      <ctl:param name="isGET" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="featureOfInterestRootElementName" />
      <ctl:param name="featureOfInterestResponseSchemaLocation" />
      <ctl:param name="featureOfInterestResponseSchemaType" />
      <ctl:param name="procedure" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observableProperty" />
      <ctl:assertion>Send a request with invalid parameter "version",and the response must be a valid exception with code "InvalidParameterValue" and locator "version".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "version"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="getFeatureOfInterestResponse">
            <xsl:choose>
               <xsl:when test="$isGET eq 'true'">
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>get</ctl:method>
                     <ctl:param name="service">SOS</ctl:param>
                     <ctl:param name="version">999</ctl:param>
                     <ctl:param name="request">GetFeatureOfInterest</ctl:param>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:when>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="999" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd" />
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="999" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd" />
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($getFeatureOfInterestResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the GetFeatureOfInterest response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$getFeatureOfInterestResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a GetFeatureOfInterest request with invalid version parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$getFeatureOfInterestResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('version')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a GetFeatureOfInterest request with invalid version parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "version".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 0607 Send GetFeatureOfInterest request with null Element procedure ,the response must be a valid exception with code "MissingParameterValue" and locator "procedure".. -->
   <ctl:test name="sos:GFOIRequestNullProcedure_foiRetrieval">
      <ctl:param name="serviceURL" />
      <ctl:param name="isGET" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="featureOfInterestRootElementName" />
      <ctl:param name="featureOfInterestResponseSchemaLocation" />
      <ctl:param name="featureOfInterestResponseSchemaType" />
      <ctl:param name="procedure" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observableProperty" />
      <ctl:assertion>Send a request with null parameter "procedure",and the response must be a valid exception with code "MissingParameterValue" and locator "procedure".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "procedure"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="getFeatureOfInterestResponse">
            <xsl:choose>
               <xsl:when test="$isGET eq 'true'">
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>get</ctl:method>
                     <ctl:param name="service">SOS</ctl:param>
                     <ctl:param name="version">2.0.0</ctl:param>
                     <ctl:param name="request">GetFeatureOfInterest</ctl:param>
                     <ctl:param name="procedure" />
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:when>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:procedure />
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:procedure />
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($getFeatureOfInterestResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the GetFeatureOfInterest response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$getFeatureOfInterestResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a GetFeatureOfInterest request with invalid procedure parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$getFeatureOfInterestResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('procedure')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a GetFeatureOfInterest request with null procedure parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "procedure".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 0608 Send GetFeatureOfInterest request with invalid Element procedure ,the response must be a valid exception with code "InvalidParameterValue" and locator "procedure".. -->
   <ctl:test name="sos:GFOIRequestInvalidProcedure_foiRetrieval">
      <ctl:param name="serviceURL" />
      <ctl:param name="isGET" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="featureOfInterestRootElementName" />
      <ctl:param name="featureOfInterestResponseSchemaLocation" />
      <ctl:param name="featureOfInterestResponseSchemaType" />
      <ctl:param name="procedure" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observableProperty" />
      <ctl:assertion>Send a request with invalid parameter "procedure",and the response must be a valid exception with code "InvalidParameterValue" and locator "procedure".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "procedure"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="getFeatureOfInterestResponse">
            <xsl:choose>
               <xsl:when test="$isGET eq 'true'">
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>get</ctl:method>
                     <ctl:param name="service">SOS</ctl:param>
                     <ctl:param name="version">2.0.0</ctl:param>
                     <ctl:param name="request">GetFeatureOfInterest</ctl:param>
                     <ctl:param name="procedure">
                        <xsl:value-of select="current-dateTime()" />
                     </ctl:param>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:when>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:procedure>
                              <xsl:value-of select="current-dateTime()" />
                           </sos:procedure>
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:procedure>
                              <xsl:value-of select="current-dateTime()" />
                           </sos:procedure>
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($getFeatureOfInterestResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the GetFeatureOfInterest response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$getFeatureOfInterestResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a GetFeatureOfInterest request with invalid procedure parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$getFeatureOfInterestResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('procedure')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a GetFeatureOfInterest request with invalid procedure parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "procedure".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 0609 Send GetFeatureOfInterest request with null Element observedProperty ,the response must be a valid exception with code "MissingParameterValue" and locator "observedProperty".. -->
   <ctl:test name="sos:GFOIRequestNullObservedProperty_foiRetrieval">
      <ctl:param name="serviceURL" />
      <ctl:param name="isGET" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="featureOfInterestRootElementName" />
      <ctl:param name="featureOfInterestResponseSchemaLocation" />
      <ctl:param name="featureOfInterestResponseSchemaType" />
      <ctl:param name="procedure" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observableProperty" />
      <ctl:assertion>Send a request with null parameter "observedProperty",and the response must be a valid exception with code "MissingParameterValue" and locator "observedProperty".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "observedProperty"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="getFeatureOfInterestResponse">
            <xsl:choose>
               <xsl:when test="$isGET eq 'true'">
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>get</ctl:method>
                     <ctl:param name="service">SOS</ctl:param>
                     <ctl:param name="version">2.0.0</ctl:param>
                     <ctl:param name="request">GetFeatureOfInterest</ctl:param>
                     <ctl:param name="observedProperty" />
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:when>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:observedProperty />
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:observedProperty />
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($getFeatureOfInterestResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the GetFeatureOfInterest response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$getFeatureOfInterestResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a GetFeatureOfInterest request with invalid observedProperty parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$getFeatureOfInterestResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('observedProperty')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a GetFeatureOfInterest request with null observedProperty parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "observedProperty".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 0610 Send GetFeatureOfInterest request with invalid Element observedProperty ,the response must be a valid exception with code "InvalidParameterValue" and locator "observedProperty".. -->
   <ctl:test name="sos:GFOIRequestInvalidObservedProperty_foiRetrieval">
      <ctl:param name="serviceURL" />
      <ctl:param name="isGET" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="featureOfInterestRootElementName" />
      <ctl:param name="featureOfInterestResponseSchemaLocation" />
      <ctl:param name="featureOfInterestResponseSchemaType" />
      <ctl:param name="procedure" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observableProperty" />
      <ctl:assertion>Send a request with invalid parameter "observableProperty",and the response must be a valid exception with code "InvalidParameterValue" and locator "observableProperty".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "observableProperty"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="getFeatureOfInterestResponse">
            <xsl:choose>
               <xsl:when test="$isGET eq 'true'">
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>get</ctl:method>
                     <ctl:param name="service">SOS</ctl:param>
                     <ctl:param name="version">2.0.0</ctl:param>
                     <ctl:param name="request">GetFeatureOfInterest</ctl:param>
                     <ctl:param name="observedProperty">
                        <xsl:value-of select="current-dateTime()" />
                     </ctl:param>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:when>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:observedProperty>
                              <xsl:value-of select="current-dateTime()" />
                           </sos:observedProperty>
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:observedProperty>
                              <xsl:value-of select="current-dateTime()" />
                           </sos:observedProperty>
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($getFeatureOfInterestResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the GetFeatureOfInterest response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$getFeatureOfInterestResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a GetFeatureOfInterest request with invalid observedProperty parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$getFeatureOfInterestResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('observedProperty')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a GetFeatureOfInterest request with invalid observedProperty parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "observedProperty".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 0611 Send GetFeatureOfInterest request with null Element featureOfInterest ,the response must be a valid exception with code "MissingParameterValue" and locator "featureOfInterest".. -->
   <ctl:test name="sos:GFOIRequestNullfeatureOfInterest_foiRetrieval">
      <ctl:param name="serviceURL" />
      <ctl:param name="isGET" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="featureOfInterestRootElementName" />
      <ctl:param name="featureOfInterestResponseSchemaLocation" />
      <ctl:param name="featureOfInterestResponseSchemaType" />
      <ctl:param name="procedure" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observableProperty" />
      <ctl:assertion>Send a request with null parameter "featureOfInterest",and the response must be a valid exception with code "MissingParameterValue" and locator "featureOfInterest".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "featureOfInterest"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="getFeatureOfInterestResponse">
            <xsl:choose>
               <xsl:when test="$isGET eq 'true'">
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>get</ctl:method>
                     <ctl:param name="service">SOS</ctl:param>
                     <ctl:param name="version">2.0.0</ctl:param>
                     <ctl:param name="request">GetFeatureOfInterest</ctl:param>
                     <ctl:param name="featureOfInterest" />
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:when>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:featureOfInterest />
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:featureOfInterest />
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($getFeatureOfInterestResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the GetFeatureOfInterest response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$getFeatureOfInterestResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a GetFeatureOfInterest request with invalid featureOfInterest parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$getFeatureOfInterestResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('featureOfInterest')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a GetFeatureOfInterest request with null featureOfInterest parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "featureOfInterest".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 0612 Send GetFeatureOfInterest request with invalid Element featureOfInterest ,the response must be a valid exception with code "InvalidParameterValue" and locator "featureOfInterest".. -->
   <ctl:test name="sos:GFOIRequestInvalidfeatureOfInterest_foiRetrieval">
      <ctl:param name="serviceURL" />
      <ctl:param name="isGET" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="featureOfInterestRootElementName" />
      <ctl:param name="featureOfInterestResponseSchemaLocation" />
      <ctl:param name="featureOfInterestResponseSchemaType" />
      <ctl:param name="procedure" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observableProperty" />
      <ctl:assertion>Send a request with invalid parameter "featureOfInterest",and the response must be a valid exception with code "InvalidParameterValue" and locator "featureOfInterest".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "featureOfInterest"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="getFeatureOfInterestResponse">
            <xsl:choose>
               <xsl:when test="$isGET eq 'true'">
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>get</ctl:method>
                     <ctl:param name="service">SOS</ctl:param>
                     <ctl:param name="version">2.0.0</ctl:param>
                     <ctl:param name="request">GetFeatureOfInterest</ctl:param>
                     <ctl:param name="featureOfInterest">
                        <xsl:value-of select="current-dateTime()" />
                     </ctl:param>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:when>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:featureOfInterest>
                              <xsl:value-of select="current-dateTime()" />
                           </sos:featureOfInterest>
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:featureOfInterest>
                              <xsl:value-of select="current-dateTime()" />
                           </sos:featureOfInterest>
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($getFeatureOfInterestResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the GetFeatureOfInterest response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$getFeatureOfInterestResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a GetFeatureOfInterest request with invalid featureOfInterest parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$getFeatureOfInterestResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('featureOfInterest')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a GetFeatureOfInterest request with invalid featureOfInterest parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "featureOfInterest".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 0613 Send GetFeatureOfInterest request with null Element spatialFilter\\ValueReference ,the response must be a valid exception with code "MissingParameterValue" and locator "ValueReference".. -->
   <ctl:test name="sos:GFOIRequestNULLSpatialFilter_foiRetrieval">
      <ctl:param name="serviceURL" />
      <ctl:param name="isGET" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="featureOfInterestRootElementName" />
      <ctl:param name="featureOfInterestResponseSchemaLocation" />
      <ctl:param name="featureOfInterestResponseSchemaType" />
      <ctl:param name="procedure" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observableProperty" />
      <ctl:assertion>Send a request with null parameter "spatialFilter\\ValueReference",and the response must be a valid exception with code "MissingParameterValue" and locator "ValueReference".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "ValueReference"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="getFeatureOfInterestResponse">
            <xsl:choose>
               <xsl:when test="$isGET eq 'true'">
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>get</ctl:method>
                     <ctl:param name="service">SOS</ctl:param>
                     <ctl:param name="version">2.0.0</ctl:param>
                     <ctl:param name="request">GetFeatureOfInterest</ctl:param>
                     <ctl:param name="spatialFilter">,0.0,10.0,0.0,10.0,urn:ogc:def:crs:EPSG::4326</ctl:param>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:when>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:spatialFilter>
                              <fes:BBOX>
                                 <fes:ValueReference />
                                 <gml:Envelope srsName="urn:ogc:def:crs:EPSG::4326">
                                    <gml:lowerCorner>0.0 0.0</gml:lowerCorner>
                                    <gml:upperCorner>10.0 10.0</gml:upperCorner>
                                 </gml:Envelope>
                              </fes:BBOX>
                           </sos:spatialFilter>
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:spatialFilter>
                              <fes:BBOX>
                                 <fes:ValueReference />
                                 <gml:Envelope srsName="urn:ogc:def:crs:EPSG::4326">
                                    <gml:lowerCorner>0.0 0.0</gml:lowerCorner>
                                    <gml:upperCorner>10.0 10.0</gml:upperCorner>
                                 </gml:Envelope>
                              </fes:BBOX>
                           </sos:spatialFilter>
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($getFeatureOfInterestResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the GetFeatureOfInterest response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$getFeatureOfInterestResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($getFeatureOfInterestResponse)" />
                     </ctl:message>
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a GetFeatureOfInterest request with invalid ValueReference parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$getFeatureOfInterestResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('ValueReference')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a GetFeatureOfInterest request with null ValueReference parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "ValueReference".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 0614 Send GetFeatureOfInterest request with invalid Element spatialFilter\\ValueReference ,the response must be a valid exception with code "InvalidParameterValue" and locator "ValueReference".. -->
   <ctl:test name="sos:GFOIRequestInvalidSpatialFilter_foiRetrieval">
      <ctl:param name="serviceURL" />
      <ctl:param name="isGET" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="featureOfInterestRootElementName" />
      <ctl:param name="featureOfInterestResponseSchemaLocation" />
      <ctl:param name="featureOfInterestResponseSchemaType" />
      <ctl:param name="procedure" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observableProperty" />
      <ctl:assertion>Send a request with invalid parameter "ValueReference",and the response must be a valid exception with code "InvalidParameterValue" and locator "ValueReference".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "ValueReference"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="getFeatureOfInterestResponse">
            <xsl:choose>
               <xsl:when test="$isGET eq 'true'">
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>get</ctl:method>
                     <ctl:param name="service">SOS</ctl:param>
                     <ctl:param name="version">2.0.0</ctl:param>
                     <ctl:param name="request">GetFeatureOfInterest</ctl:param>
                     <ctl:param name="spatialFilter">
                        <xsl:value-of select="concat(current-dateTime(), ',0.0,10.0,0.0,10.0,urn:ogc:def:crs:EPSG::4326')" />
                     </ctl:param>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:when>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:spatialFilter>
                              <fes:BBOX>
                                 <fes:ValueReference>
                                    <xsl:value-of select="current-dateTime()" />
                                 </fes:ValueReference>
                                 <gml:Envelope srsName="urn:ogc:def:crs:EPSG::4326">
                                    <gml:lowerCorner>0.0 0.0</gml:lowerCorner>
                                    <gml:upperCorner>10.0 10.0</gml:upperCorner>
                                 </gml:Envelope>
                              </fes:BBOX>
                           </sos:spatialFilter>
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:spatialFilter>
                              <fes:BBOX>
                                 <fes:ValueReference>
                                    <xsl:value-of select="current-dateTime()" />
                                 </fes:ValueReference>
                                 <gml:Envelope srsName="urn:ogc:def:crs:EPSG::4326">
                                    <gml:lowerCorner>0.0 0.0</gml:lowerCorner>
                                    <gml:upperCorner>10.0 10.0</gml:upperCorner>
                                 </gml:Envelope>
                              </fes:BBOX>
                           </sos:spatialFilter>
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($getFeatureOfInterestResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the GetFeatureOfInterest response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$getFeatureOfInterestResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($getFeatureOfInterestResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a GetFeatureOfInterest request with invalid ValueReference parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$getFeatureOfInterestResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('ValueReference')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a GetFeatureOfInterest request with invalid ValueReference parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "ValueReference".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 0615 Send valid GetFeatureOfInterest request with Specific parameter values, check the response is empty. -->
   <ctl:test name="sos:GFOIRequestEmptyResponse_foiRetrieval">
      <ctl:param name="serviceURL" />
      <ctl:param name="isGET" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="featureOfInterestRootElementName" />
      <ctl:param name="featureOfInterestResponseSchemaLocation" />
      <ctl:param name="featureOfInterestResponseSchemaType" />
      <ctl:param name="procedure" />
      <ctl:param name="featureOfInterest" />
      <ctl:param name="observableProperty" />
      <ctl:assertion>Send valid GetFeatureOfInterest request with request parameters that
				do not match any response to server and verify that the SOS
				responds with an empty getFeatureOfInterestResponse response.</ctl:assertion>
      <ctl:comment>Pass if the response is empty; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="getFeatureOfInterestResponse">
            <xsl:choose>
               <xsl:when test="$isGET eq 'true'">
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>get</ctl:method>
                     <ctl:param name="service">SOS</ctl:param>
                     <ctl:param name="version">2.0.0</ctl:param>
                     <ctl:param name="request">GetFeatureOfInterest</ctl:param>
                     <ctl:param name="procedure">
                        <xsl:value-of select="$procedure" />
                     </ctl:param>
                     <ctl:param name="observedProperty">
                        <xsl:value-of select="$observableProperty" />
                     </ctl:param>
                     <ctl:param name="spatialFilter">om:featureOfInterest/*/sams:shape,179,90,179,90,urn:ogc:def:crs:EPSG::4326</ctl:param>
                     <parsers:XMLValidatingParser>
                        <parsers:schemas>
                           <parsers:schema type="resource">xsd/w3c/xml.xsd</parsers:schema>
                           <parsers:schema>
                              <xsl:attribute name="type">
                                 <xsl:value-of select="$featureOfInterestResponseSchemaType" />
                              </xsl:attribute>
                              <xsl:value-of select="$featureOfInterestResponseSchemaLocation" />
                           </parsers:schema>
                        </parsers:schemas>
                     </parsers:XMLValidatingParser>
                  </ctl:request>
               </xsl:when>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:procedure>
                              <xsl:value-of select="$procedure" />
                           </sos:procedure>
                           <sos:observedProperty>
                              <xsl:value-of select="$observableProperty" />
                           </sos:observedProperty>
                           <sos:spatialFilter>
                              <fes:BBOX>
                                 <fes:ValueReference>om:featureOfInterest/*/sams:shape</fes:ValueReference>
                                 <gml:Envelope srsName="urn:ogc:def:crs:EPSG::4326">
                                    <gml:lowerCorner>179 90</gml:lowerCorner>
                                    <gml:upperCorner>179 90</gml:upperCorner>
                                 </gml:Envelope>
                              </fes:BBOX>
                           </sos:spatialFilter>
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <parsers:SOAPParser return="content">
                        <parsers:XMLValidatingParser>
                           <parsers:schemas>
                              <parsers:schema>
                                 <xsl:attribute name="type">
                                    <xsl:value-of select="$featureOfInterestResponseSchemaType" />
                                 </xsl:attribute>
                                 <xsl:value-of select="$featureOfInterestResponseSchemaLocation" />
                              </parsers:schema>
                           </parsers:schemas>
                        </parsers:XMLValidatingParser>
                     </parsers:SOAPParser>
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:GetFeatureOfInterest service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:procedure>
                              <xsl:value-of select="$procedure" />
                           </sos:procedure>
                           <sos:observedProperty>
                              <xsl:value-of select="$observableProperty" />
                           </sos:observedProperty>
                           <sos:spatialFilter>
                              <fes:BBOX>
                                 <fes:ValueReference>om:featureOfInterest/*/sams:shape</fes:ValueReference>
                                 <gml:Envelope srsName="urn:ogc:def:crs:EPSG::4326">
                                    <gml:lowerCorner>179 90</gml:lowerCorner>
                                    <gml:upperCorner>179 90</gml:upperCorner>
                                 </gml:Envelope>
                              </fes:BBOX>
                           </sos:spatialFilter>
                        </sos:GetFeatureOfInterest>
                     </ctl:body>
                     <parsers:XMLValidatingParser>
                        <parsers:schemas>
                           <parsers:schema type="resource">xsd/w3c/xml.xsd</parsers:schema>
                           <parsers:schema>
                              <xsl:attribute name="type">
                                 <xsl:value-of select="$featureOfInterestResponseSchemaType" />
                              </xsl:attribute>
                              <xsl:value-of select="$featureOfInterestResponseSchemaLocation" />
                           </parsers:schema>
                        </parsers:schemas>
                     </parsers:XMLValidatingParser>
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <!-- 1.root is sos:GetFeatureOfInterestResponse -->
         <xsl:variable name="Root" select="local-name-from-QName(node-name($getFeatureOfInterestResponse/*[1]))" />
         <xsl:variable name="Root2" select="local-name-from-QName(node-name($getFeatureOfInterestResponse/soap12:Envelope/soap12:Body/*[1]))" />
         <ctl:message>
            The root2 is "
            <xsl:value-of select="$Root2" />
            "
         </ctl:message>
         <xsl:choose>
            <xsl:when test="not($Root=string('GetFeatureOfInterestResponse')) and not($Root2=string('GetFeatureOfInterestResponse'))">
               <ctl:message>
                  The root element from the response to a GetFeatureOfInterest request "
                  <xsl:value-of select="$Root" />
                  " does not match the expected root element of "
                  <xsl:value-of select="string('GetFeatureOfInterestResponse')" />
                  "
               </ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <!-- 2.sonElement of root is empty -->
               <xsl:choose>
                  <xsl:when test="not($getFeatureOfInterestResponse/*[1]/*)">
                     <ctl:message>PASS</ctl:message>
                  </xsl:when>
                  <xsl:otherwise>
                     <ctl:message>The son element of root must be empty</ctl:message>
                     <ctl:fail />
                  </xsl:otherwise>
               </xsl:choose>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
</ctl:package>