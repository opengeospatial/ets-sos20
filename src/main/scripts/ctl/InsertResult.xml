<ctl:package xmlns:ctl="http://www.occamlab.com/ctl" xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:om="http://www.opengis.net/om/2.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:owsTests="http://www.opengis.net/ows/1.1" xmlns:parsers="http://www.occamlab.com/te/parsers" xmlns:sml="http://www.opengis.net/sensorML/1.0.1" xmlns:soap11="http://schemas.xmlsoap.org/soap/" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope" xmlns:sos="http://www.opengis.net/sos/2.0" xmlns:sosFunctions="http://www.opengis.net/sos/2.0" xmlns:swe="http://www.opengis.net/swe/2.0" xmlns:swes="http://www.opengis.net/swes/2.0" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<!-- 12.SOS resultHandling: InsertResult -->
   <ctl:test name="sos:InsertResult-Test" isConformanceClass="true">
      <ctl:param name="serviceURL" />
      <ctl:param name="hasIR" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="serviceType" />
      <ctl:param name="serviceVersion" />
      <ctl:param name="InsertResultRootElementName" />
      <ctl:param name="InsertResultResponseSchemaLocation" />
      <ctl:param name="InsertResultResponseSchemaType" />
      <ctl:param name="InsertResultResponseContentType" />
      <ctl:param name="test1201" />
      <ctl:param name="test1202" />
      <ctl:param name="test1203" />
      <ctl:param name="test1204" />
      <ctl:param name="test1205" />
      <ctl:param name="test1206" />
      <ctl:param name="test1207" />
      <ctl:param name="test1208" />
      <ctl:param name="test1209" />
      <ctl:param name="test1210" />
      <ctl:param name="test1211" />
      <ctl:param name="template" />
      <ctl:assertion>Execute InsertResult Test.</ctl:assertion>
      <ctl:comment>Pass if all the subtest not fail; fail otherwise.</ctl:comment>
      <ctl:code>
         <xsl:choose>
            <xsl:when test="$hasIR eq 'false'">
               <ctl:message>The server does not support the operation "InsertResult", so skip this test.</ctl:message>
            </xsl:when>
            <xsl:otherwise>
               <!-- set a resultValues variable -->
               <xsl:variable name="resultValues" select="'2008-03-01T17:44:15.000+00:00,32.0'" />
               <xsl:if test="$test1201 eq 'true'">
                  <ctl:message select="'******************** 12.01.RequestNoService ********************'" />
                  <ctl:call-test name="sos:IRRequestNoService_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultRootElementName" select="$InsertResultRootElementName" />
                     <ctl:with-param name="InsertResultResponseSchemaLocation" select="$InsertResultResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultResponseSchemaType" select="$InsertResultResponseSchemaType" />
                     <ctl:with-param name="template" select="$template" />
                     <ctl:with-param name="resultValues" select="$resultValues" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1202 eq 'true'">
                  <ctl:message select="'******************** 12.02.RequestNullService ********************'" />
                  <ctl:call-test name="sos:IRRequestNullService_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultRootElementName" select="$InsertResultRootElementName" />
                     <ctl:with-param name="InsertResultResponseSchemaLocation" select="$InsertResultResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultResponseSchemaType" select="$InsertResultResponseSchemaType" />
                     <ctl:with-param name="template" select="$template" />
                     <ctl:with-param name="resultValues" select="$resultValues" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1203 eq 'true'">
                  <ctl:message select="'******************** 12.03.RequestInvalidService ********************'" />
                  <ctl:call-test name="sos:IRRequestInvalidService_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultRootElementName" select="$InsertResultRootElementName" />
                     <ctl:with-param name="InsertResultResponseSchemaLocation" select="$InsertResultResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultResponseSchemaType" select="$InsertResultResponseSchemaType" />
                     <ctl:with-param name="template" select="$template" />
                     <ctl:with-param name="resultValues" select="$resultValues" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1204 eq 'true'">
                  <ctl:message select="'******************** 12.04.RequestNoVersion ********************'" />
                  <ctl:call-test name="sos:IRRequestNoVersion_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultRootElementName" select="$InsertResultRootElementName" />
                     <ctl:with-param name="InsertResultResponseSchemaLocation" select="$InsertResultResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultResponseSchemaType" select="$InsertResultResponseSchemaType" />
                     <ctl:with-param name="template" select="$template" />
                     <ctl:with-param name="resultValues" select="$resultValues" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1205 eq 'true'">
                  <ctl:message select="'******************** 12.05.RequestNullVersion ********************'" />
                  <ctl:call-test name="sos:IRRequestNullVersion_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultRootElementName" select="$InsertResultRootElementName" />
                     <ctl:with-param name="InsertResultResponseSchemaLocation" select="$InsertResultResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultResponseSchemaType" select="$InsertResultResponseSchemaType" />
                     <ctl:with-param name="template" select="$template" />
                     <ctl:with-param name="resultValues" select="$resultValues" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1206 eq 'true'">
                  <ctl:message select="'******************** 12.06.RequestInvalidVersion ********************'" />
                  <ctl:call-test name="sos:IRRequestInvalidVersion_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultRootElementName" select="$InsertResultRootElementName" />
                     <ctl:with-param name="InsertResultResponseSchemaLocation" select="$InsertResultResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultResponseSchemaType" select="$InsertResultResponseSchemaType" />
                     <ctl:with-param name="template" select="$template" />
                     <ctl:with-param name="resultValues" select="$resultValues" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1207 eq 'true'">
                  <ctl:message select="'******************** 12.07.RequestNulltemplate ********************'" />
                  <ctl:call-test name="sos:IRRequestNulltemplate_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultRootElementName" select="$InsertResultRootElementName" />
                     <ctl:with-param name="InsertResultResponseSchemaLocation" select="$InsertResultResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultResponseSchemaType" select="$InsertResultResponseSchemaType" />
                     <ctl:with-param name="template" select="$template" />
                     <ctl:with-param name="resultValues" select="$resultValues" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1208 eq 'true'">
                  <ctl:message select="'******************** 12.08.RequestInvalidtemplate ********************'" />
                  <ctl:call-test name="sos:IRRequestInvalidtemplate_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultRootElementName" select="$InsertResultRootElementName" />
                     <ctl:with-param name="InsertResultResponseSchemaLocation" select="$InsertResultResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultResponseSchemaType" select="$InsertResultResponseSchemaType" />
                     <ctl:with-param name="template" select="$template" />
                     <ctl:with-param name="resultValues" select="$resultValues" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1209 eq 'true'">
                  <ctl:message select="'******************** 12.09.RequestNullresultValues ********************'" />
                  <ctl:call-test name="sos:IRRequestNullresultValues_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultRootElementName" select="$InsertResultRootElementName" />
                     <ctl:with-param name="InsertResultResponseSchemaLocation" select="$InsertResultResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultResponseSchemaType" select="$InsertResultResponseSchemaType" />
                     <ctl:with-param name="template" select="$template" />
                     <ctl:with-param name="resultValues" select="$resultValues" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1210 eq 'true'">
                  <ctl:message select="'******************** 12.10.RequestInvalidresultValues ********************'" />
                  <ctl:call-test name="sos:IRRequestInvalidresultValues_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultRootElementName" select="$InsertResultRootElementName" />
                     <ctl:with-param name="InsertResultResponseSchemaLocation" select="$InsertResultResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultResponseSchemaType" select="$InsertResultResponseSchemaType" />
                     <ctl:with-param name="template" select="$template" />
                     <ctl:with-param name="resultValues" select="$resultValues" />
                  </ctl:call-test>
               </xsl:if>
               <xsl:if test="$test1211 eq 'true'">
                  <ctl:message select="'******************** 12.11.RequestValidRequest ********************'" />
                  <ctl:call-test name="sos:IRRequestValidRequest_resultInsertion">
                     <ctl:with-param name="serviceURL" select="$serviceURL" />
                     <ctl:with-param name="isSOAP" select="$isSOAP" />
                     <ctl:with-param name="getCapabilitiesResponse" select="$getCapabilitiesResponse" />
                     <ctl:with-param name="InsertResultRootElementName" select="$InsertResultRootElementName" />
                     <ctl:with-param name="InsertResultResponseSchemaLocation" select="$InsertResultResponseSchemaLocation" />
                     <ctl:with-param name="InsertResultResponseSchemaType" select="$InsertResultResponseSchemaType" />
                     <ctl:with-param name="template" select="$template" />
                     <ctl:with-param name="resultValues" select="$resultValues" />
                  </ctl:call-test>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1201 Send InsertResult request (KVP) without parameter service ,the response must be a valid exception with code "MissingParameterValue" and locator "service".. -->
   <!-- 1201 Send InsertResult request (POST or SOAP) without parameter service ,the response must be a valid exception with code "InvalidRequest" and locator "Expected attribute: service in element InsertResult@http://www.opengis.net/sos/2.0".. -->
   <ctl:test name="sos:IRRequestNoService_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultRootElementName" />
      <ctl:param name="InsertResultResponseSchemaLocation" />
      <ctl:param name="InsertResultResponseSchemaType" />
      <ctl:param name="template" />
      <ctl:param name="resultValues" />
      <ctl:assertion>Send a request (KVP) without parameter "service",and the response must be a valid exception with code "MissingParameterValue" and locator "service". 
			Send a request (POST or SOAP) without parameter "service",and the response must be a valid exception with code "InvalidRequest" and locator "Expected attribute: service in element InsertResultTemplate@http://www.opengis.net/sos/2.0".</ctl:assertion>
      <ctl:comment>Pass if the server (KVP) returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "service"; fail otherwise.
			Pass if the server (POST or SOAP) returns a valid exception message with an exceptionCode "InvalidRequest" and locator is "Expected attribute: service in element InsertResultTemplate@http://www.opengis.net/sos/2.0"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertResultResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResult version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResult version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResult response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResult request with no service parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidRequest')" />
                        <ctl:with-param name="locatorToCheck" select="string('Expected attribute: service in element InsertResult@http://www.opengis.net/sos/2.0')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResult request with no service parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidRequest" and a locator of "Expected attribute: service in element InsertResult@http://www.opengis.net/sos/2.0".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1202 Send InsertResult request with null parameter service ,the response must be a valid exception with code "MissingParameterValue" and locator "service".. -->
   <ctl:test name="sos:IRRequestNullService_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultRootElementName" />
      <ctl:param name="InsertResultResponseSchemaLocation" />
      <ctl:param name="InsertResultResponseSchemaType" />
      <ctl:param name="template" />
      <ctl:param name="resultValues" />
      <ctl:assertion>Send a request with null parameter "service",and the response must be a valid exception with code "MissingParameterValue" and locator "service".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "service"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertResultResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResult service="" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResult service="" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResult response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResult request with invalid service parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('service')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResult request with null service parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "service".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1203 Send InsertResult request with invalid parameter service ,the response must be a valid exception with code "InvalidParameterValue" and locator "service".. -->
   <ctl:test name="sos:IRRequestInvalidService_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultRootElementName" />
      <ctl:param name="InsertResultResponseSchemaLocation" />
      <ctl:param name="InsertResultResponseSchemaType" />
      <ctl:param name="template" />
      <ctl:param name="resultValues" />
      <ctl:assertion>Send a request with invalid parameter "procedure",and the response must be a valid exception with code "InvalidParameterValue" and locator "service".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "service"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="InsertResultResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResult service="ASDF" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResult service="ASDF" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResult response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResult request with invalid service parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('service')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResult request with invalid service parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "service".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1204 Send InsertResult request (KVP) without parameter version ,the response must be a valid exception with code "InvalidRequest" and locator "version".. -->
   <!-- 1204 Send InsertResult request (POST or SOAP) without parameter version ,the response must be a valid exception with code "InvalidRequest" and locator "Expected attribute: version in element InsertResult@http://www.opengis.net/sos/2.0".. -->
   <ctl:test name="sos:IRRequestNoVersion_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultRootElementName" />
      <ctl:param name="InsertResultResponseSchemaLocation" />
      <ctl:param name="InsertResultResponseSchemaType" />
      <ctl:param name="template" />
      <ctl:param name="resultValues" />
      <ctl:assertion>Send a request (KVP) without parameter "version",and the response must be a valid exception with code "MissingParameterValue" and locator "version". 
			Send a request (POST or SOAP) without parameter "version",and the response must be a valid exception with code "InvalidRequest" and locator "Expected attribute: service in element InsertResultTemplate@http://www.opengis.net/sos/2.0".</ctl:assertion>
      <ctl:comment>Pass if the server (KVP) returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "version"; fail otherwise.
			Pass if the server (POST or SOAP) returns a valid exception message with an exceptionCode "InvalidRequest" and locator is "Expected attribute: version in element InsertResultTemplate@http://www.opengis.net/sos/2.0"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertResultResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResult service="SOS" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResult service="SOS" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResult response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResult request with no version parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidRequest')" />
                        <ctl:with-param name="locatorToCheck" select="string('Expected attribute: version in element InsertResult@http://www.opengis.net/sos/2.0')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResult request with no version parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidRequest" and a locator of "Expected attribute: version in element InsertResult@http://www.opengis.net/sos/2.0".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1205 Send InsertResult request with null parameter version ,the response must be a valid exception with code "MissingParameterValue" and locator "version".. -->
   <ctl:test name="sos:IRRequestNullVersion_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultRootElementName" />
      <ctl:param name="InsertResultResponseSchemaLocation" />
      <ctl:param name="InsertResultResponseSchemaType" />
      <ctl:param name="template" />
      <ctl:param name="resultValues" />
      <ctl:assertion>Send a request with null parameter "version",and the response must be a valid exception with code "MissingParameterValue" and locator "version".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "version"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertResultResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResult service="SOS" version="" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResult service="SOS" version="" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResult response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResult request with invalid version parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('version')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResult request with null version parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "version".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1206 Send InsertResult request with invalid parameter version ,the response must be a valid exception with code "InvalidParameterValue" and locator "version".. -->
   <ctl:test name="sos:IRRequestInvalidVersion_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultRootElementName" />
      <ctl:param name="InsertResultResponseSchemaLocation" />
      <ctl:param name="InsertResultResponseSchemaType" />
      <ctl:param name="template" />
      <ctl:param name="resultValues" />
      <ctl:assertion>Send a request with invalid parameter "version",and the response must be a valid exception with code "InvalidParameterValue" and locator "version".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "version"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="InsertResultResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResult service="SOS" version="999" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResult service="SOS" version="999" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResult response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResult request with invalid version parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('version')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResult request with invalid version parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "version".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1207 Send InsertResult request with null Element template ,the response must be a valid exception with code "MissingParameterValue" and locator "template".. -->
   <ctl:test name="sos:IRRequestNulltemplate_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultRootElementName" />
      <ctl:param name="InsertResultResponseSchemaLocation" />
      <ctl:param name="InsertResultResponseSchemaType" />
      <ctl:param name="template" />
      <ctl:param name="resultValues" />
      <ctl:assertion>Send a request with null parameter "template",and the response must be a valid exception with code "MissingParameterValue" and locator "template".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "template"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertResultResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResult service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template />
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResult service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template />
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResult response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResult request with invalid template parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('template')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResult request with null template parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "template".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1208 Send InsertResult request with invalid Element template ,the response must be a valid exception with code "InvalidParameterValue" and locator "template".. -->
   <ctl:test name="sos:IRRequestInvalidtemplate_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultRootElementName" />
      <ctl:param name="InsertResultResponseSchemaLocation" />
      <ctl:param name="InsertResultResponseSchemaType" />
      <ctl:param name="template" />
      <ctl:param name="resultValues" />
      <ctl:assertion>Send a request with invalid parameter "template",and the response must be a valid exception with code "InvalidParameterValue" and locator "template".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "template"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <xsl:variable name="InsertResultResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResult service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="current-dateTime()" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResult service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="current-dateTime()" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResult response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResult request with invalid template parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('template')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResult request with invalid template parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "template".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1209 Send InsertResult request with null Element resultValues ,the response must be a valid exception with code "MissingParameterValue" and locator "resultValues".. -->
   <ctl:test name="sos:IRRequestNullresultValues_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultRootElementName" />
      <ctl:param name="InsertResultResponseSchemaLocation" />
      <ctl:param name="InsertResultResponseSchemaType" />
      <ctl:param name="template" />
      <ctl:param name="resultValues" />
      <ctl:assertion>Send a request with null parameter "resultValues",and the response must be a valid exception with code "MissingParameterValue" and locator "resultValues".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "MissingParameterValue" and locator is "resultValues"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <!-- send request -->
         <xsl:variable name="InsertResultResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResult service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues />
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResult service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues />
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResult response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResult request with invalid resultValues parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('MissingParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('resultValues')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResult request with null resultValues parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "MissingParameterValue" and a locator of "resultValues".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1210 Send InsertResult request with invalid Element resultValues ,the response must be a valid exception with code "InvalidParameterValue" and locator "resultValues".. -->
   <ctl:test name="sos:IRRequestInvalidresultValues_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultRootElementName" />
      <ctl:param name="InsertResultResponseSchemaLocation" />
      <ctl:param name="InsertResultResponseSchemaType" />
      <ctl:param name="template" />
      <ctl:param name="resultValues" />
      <ctl:assertion>Send a request with invalid parameter "resultValues",and the response must be a valid exception with code "InvalidParameterValue" and locator "resultValues".</ctl:assertion>
      <ctl:comment>Pass if the server returns a valid exception message with an exceptionCode "InvalidParameterValue" and locator is "resultValues"; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <ctl:message>
            template:  "
            <xsl:value-of select="$template" />
            ".
         </ctl:message>
         <xsl:variable name="InsertResultResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResult service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="'1234567890'" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReportSOAP" />
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResult service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="'1234567890'" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <ctl:call-function name="sosFunctions:validateExceptionReport" />
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResult response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultResponse/*">
                  <xsl:if test="$isSOAP=string('true')">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfoSOAP($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <xsl:if test="not($isSOAP=string('true'))">
                     <ctl:message>
                        The response was:
                        <xsl:value-of select="sosFunctions:getExceptionInfo($InsertResultResponse)" />
                     </ctl:message>
                  </xsl:if>
                  <ctl:message>Checking the validity of the response to a InsertResult request with invalid resultValues parameter.</ctl:message>
                  <xsl:variable name="isCorrect">
                     <ctl:call-function name="sosFunctions:checkExceptionReport">
                        <ctl:with-param name="exceptionReport" select="$InsertResultResponse" />
                        <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidParameterValue')" />
                        <ctl:with-param name="locatorToCheck" select="string('resultValues')" />
                        <ctl:with-param name="PostEncodingIsSOAP" select="$isSOAP" />
                     </ctl:call-function>
                  </xsl:variable>
                  <ctl:message>
                     The validity check returned:
                     <xsl:value-of select="$isCorrect" />
                  </ctl:message>
                  <xsl:if test="not(xsd:boolean($isCorrect))">
                     <ctl:message>FAILURE:  The server did not return the expected exception report response to a InsertResult request with invalid resultValues parameter specified.</ctl:message>
                     <ctl:message>The response was expected to be an ExceptionReport with an exceptionCode of "InvalidParameterValue" and a locator of "resultValues".</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
   <!-- 1211 Send valid InsertResult request, the response must be a valid InsertResultResponse. -->
   <ctl:test name="sos:IRRequestValidRequest_resultInsertion">
      <ctl:param name="serviceURL" />
      <ctl:param name="isSOAP" />
      <ctl:param name="getCapabilitiesResponse" />
      <ctl:param name="InsertResultRootElementName" />
      <ctl:param name="InsertResultResponseSchemaLocation" />
      <ctl:param name="InsertResultResponseSchemaType" />
      <ctl:param name="template" />
      <ctl:param name="resultValues" />
      <ctl:assertion>Send a valid request ,and there must be have a valid InsertResultResponse returned.</ctl:assertion>
      <ctl:comment>Pass if the response is a valid InsertResultResponse and has an observation element in the response; fail otherwise.</ctl:comment>
      <ctl:link title="" />
      <ctl:code>
         <ctl:message>
            template:  "
            <xsl:value-of select="$template" />
            ".
         </ctl:message>
         <ctl:message>
            resultValues:  "
            <xsl:value-of select="$resultValues" />
            ".
         </ctl:message>
         <xsl:variable name="InsertResultResponse">
            <xsl:choose>
               <xsl:when test="$isSOAP eq 'true'">
                  <ctl:soap-request version="1.2" charset="UTF-8">
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:body>
                        <sos:InsertResult service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <parsers:SOAPParser return="content">
                        <parsers:XMLValidatingParser>
                           <parsers:schemas>
                              <parsers:schema>
                                 <xsl:attribute name="type">
                                    <xsl:value-of select="$InsertResultResponseSchemaType" />
                                 </xsl:attribute>
                                 <xsl:value-of select="$InsertResultResponseSchemaLocation" />
                              </parsers:schema>
                           </parsers:schemas>
                        </parsers:XMLValidatingParser>
                     </parsers:SOAPParser>
                  </ctl:soap-request>
               </xsl:when>
               <xsl:otherwise>
                  <ctl:request>
                     <ctl:url>
                        <xsl:value-of select="$serviceURL" />
                     </ctl:url>
                     <ctl:method>post</ctl:method>
                     <ctl:body>
                        <sos:InsertResult service="SOS" version="2.0.0" xsi:schemaLocation="http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd            http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd">
                           <sos:template>
                              <xsl:value-of select="$template" />
                           </sos:template>
                           <sos:resultValues>
                              <xsl:value-of select="$resultValues" />
                           </sos:resultValues>
                        </sos:InsertResult>
                     </ctl:body>
                     <parsers:XMLValidatingParser>
                        <parsers:schemas>
                           <parsers:schema type="resource">xsd/w3c/xml.xsd</parsers:schema>
                           <parsers:schema>
                              <xsl:attribute name="type">
                                 <xsl:value-of select="$InsertResultResponseSchemaType" />
                              </xsl:attribute>
                              <xsl:value-of select="$InsertResultResponseSchemaLocation" />
                           </parsers:schema>
                        </parsers:schemas>
                     </parsers:XMLValidatingParser>
                  </ctl:request>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:choose>
            <xsl:when test="not($InsertResultResponse/*)">
               <ctl:message>FAILURE:  The server did not return a response, or the response was not valid according to the InsertResult response schema for "SOS" /&gt;.</ctl:message>
               <ctl:fail />
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="$InsertResultResponse/*">
                  <xsl:variable name="responseRoot" select="local-name-from-QName(node-name($InsertResultResponse/*[1]))" />
                  <xsl:variable name="responseRoot2" select="local-name-from-QName(node-name($InsertResultResponse/soap12:Envelope/soap12:Body/*[1]))" />
                  <xsl:if test="not($responseRoot=$InsertResultRootElementName) and not($responseRoot2=$InsertResultRootElementName)">
                     <ctl:message>
                        FAILURE:  The root element from the response to a InsertResult request "
                        <xsl:value-of select="$responseRoot" />
                        " does not match the expected root element of "
                        <xsl:value-of select="$InsertResultRootElementName" />
                        "
                     </ctl:message>
                     <ctl:fail />
                  </xsl:if>
                  <!-- 1.response has one and only one observation -->
                  <xsl:variable name="innerTag" select="count($InsertResultResponse//sos:InsertResultResponse/*[1])" />
                  <xsl:if test="not($innerTag=0)">
                     <ctl:message>FAILURE:  The response should be empty.</ctl:message>
                     <ctl:fail />
                  </xsl:if>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>
</ctl:package>